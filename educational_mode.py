# educational_mode.py
# -*- coding: utf-8 -*-

from telegram import Update, InlineKeyboardButton, InlineKeyboardMarkup
from telegram.ext import CallbackQueryHandler, CommandHandler, ContextTypes
from utils import get_user_data, set_user_data

# ‚îÄ‚îÄ‚îÄ –°–û–î–ï–†–ñ–ê–ù–ò–ï –ö–£–†–°–û–í ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ

# –ë–∞–∑–æ–≤—ã–π –∫—É—Ä—Å: ¬´–û—Å–Ω–æ–≤–Ω—ã–µ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã –ü–ö¬ª (5 –±–ª–æ–∫–æ–≤)
BASIC_COURSE_BLOCKS = [
    (
        "–ë–ª–æ–∫¬†1. –ü—Ä–æ—Ü–µ—Å—Å–æ—Ä (CPU) ‚Äî –º–æ–∑–≥ –∫–æ–º–ø—å—é—Ç–µ—Ä–∞ üß†\n\n"
        "–ü—Ä–æ—Ü–µ—Å—Å–æ—Ä –æ—Ç–≤–µ—á–∞–µ—Ç –∑–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –≤—Å–µ—Ö –≤—ã—á–∏—Å–ª–µ–Ω–∏–π –∏ —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –æ—Å—Ç–∞–ª—å–Ω—ã–º–∏ —á–∞—Å—Ç—è–º–∏ –ü–ö:\n"
        "‚Ä¢ –Ø–¥—Ä–∞ –∏ –ø–æ—Ç–æ–∫–∏: –∫–∞–∂–¥–æ–µ —è–¥—Ä–æ –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –∑–∞–¥–∞—á–∏, –ø–æ—Ç–æ–∫–∏ –ø–æ–∑–≤–æ–ª—è—é—Ç –æ–¥–Ω–æ–º—É —è–¥—Ä—É —Ä–µ—à–∞—Ç—å –Ω–µ—Å–∫–æ–ª—å–∫–æ –∑–∞–¥–∞—á –æ–¥–Ω–æ–≤—Ä–µ–º–µ–Ω–Ω–æ.\n"
        "‚Ä¢ –¢–∞–∫—Ç–æ–≤–∞—è —á–∞—Å—Ç–æ—Ç–∞ (–ì–ì—Ü): –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç, —Å–∫–æ–ª—å–∫–æ –æ–ø–µ—Ä–∞—Ü–∏–π –º–æ–∂–µ—Ç –≤—ã–ø–æ–ª–Ω–∏—Ç—å —è–¥—Ä–æ –∑–∞ —Å–µ–∫—É–Ω–¥—É.\n"
        "‚Ä¢ –ö—ç—à‚Äë–ø–∞–º—è—Ç—å (L1, L2, L3): —Å–≤–µ—Ä—Ö–±—ã—Å—Ç—Ä–æ–µ —Ö—Ä–∞–Ω–∏–ª–∏—â–µ –¥–ª—è —á–∞—Å—Ç–æ –∏—Å–ø–æ–ª—å–∑—É–µ–º—ã—Ö –¥–∞–Ω–Ω—ã—Ö.\n"
        "‚Ä¢ –ò–Ω—Ç–µ–≥—Ä–∏—Ä–æ–≤–∞–Ω–Ω–∞—è –≥—Ä–∞—Ñ–∏–∫–∞: –≤—Å—Ç—Ä–æ–µ–Ω–Ω—ã–π –≤–∏–¥–µ–æ—á–∏–ø –¥–ª—è –ø—Ä–æ—Å—Ç—ã—Ö –∏–≥—Ä –∏ –≤–æ—Å–ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏—è –≤–∏–¥–µ–æ."
    ),
    (
        "–ë–ª–æ–∫¬†2. –û–ø–µ—Ä–∞—Ç–∏–≤–Ω–∞—è –ø–∞–º—è—Ç—å (RAM) ‚Äî —Ä–∞–±–æ—á–∞—è –∑–æ–Ω–∞ üóÇÔ∏è\n\n"
        "–û–ó–£ —Ö—Ä–∞–Ω–∏—Ç –¥–∞–Ω–Ω—ã–µ –∏ –ø—Ä–æ–≥—Ä–∞–º–º—ã, —Å –∫–æ—Ç–æ—Ä—ã–º–∏ —Å–µ–π—á–∞—Å —Ä–∞–±–æ—Ç–∞–µ—Ç –ø—Ä–æ—Ü–µ—Å—Å–æ—Ä:\n"
        "‚Ä¢ –¢–∏–ø DDR3/DDR4/DDR5: –≤–ª–∏—è–µ—Ç –Ω–∞ —Å–∫–æ—Ä–æ—Å—Ç—å –∏ —ç–Ω–µ—Ä–≥–æ–ø–æ—Ç—Ä–µ–±–ª–µ–Ω–∏–µ.\n"
        "‚Ä¢ –§–æ—Ä–º‚Äë—Ñ–∞–∫—Ç–æ—Ä UDIMM (–¥–µ—Å–∫—Ç–æ–ø) –∏ SO‚ÄëDIMM (–Ω–æ—É—Ç–±—É–∫).\n"
        "‚Ä¢ –Å–º–∫–æ—Å—Ç—å (4‚Äì32¬†–ì–ë): —á–µ–º –±–æ–ª—å—à–µ, —Ç–µ–º –±–æ–ª—å—à–µ –æ–¥–Ω–æ–≤—Ä–µ–º–µ–Ω–Ω–æ –æ—Ç–∫—Ä—ã—Ç—ã—Ö –ø—Ä–æ–≥—Ä–∞–º–º.\n"
        "‚Ä¢ –ß–∞—Å—Ç–æ—Ç–∞ (MT/s) –∏ –∑–∞–¥–µ—Ä–∂–∫–∏ (CL): —á–µ–º –≤—ã—à–µ ‚Äî —Ç–µ–º –±—ã—Å—Ç—Ä–µ–µ –æ—Ç–∫–ª–∏–∫.\n"
        "‚Ä¢ –î–≤—É—Ö‚Äë –∏ —á–µ—Ç—ã—Ä—ë—Ö–∫–∞–Ω–∞–ª—å–Ω—ã–π —Ä–µ–∂–∏–º: –ø–æ–≤—ã—à–∞–µ—Ç –ø—Ä–æ–ø—É—Å–∫–Ω—É—é —Å–ø–æ—Å–æ–±–Ω–æ—Å—Ç—å."
    ),
    (
        "–ë–ª–æ–∫¬†3. –ú–∞—Ç–µ—Ä–∏–Ω—Å–∫–∞—è –ø–ª–∞—Ç–∞ ‚Äî —Ü–µ–Ω—Ç—Ä —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–π üèõÔ∏è\n\n"
        "–ú–∞—Ç–µ—Ä–∏–Ω–∫–∞ –æ–±—ä–µ–¥–∏–Ω—è–µ—Ç –≤—Å–µ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã –∏ —Ä–∞—Å–ø—Ä–µ–¥–µ–ª—è–µ—Ç –ø–∏—Ç–∞–Ω–∏–µ:\n"
        "‚Ä¢ –§–æ—Ä–º‚Äë—Ñ–∞–∫—Ç–æ—Ä ATX/microATX/Mini‚ÄëITX –æ–ø—Ä–µ–¥–µ–ª—è–µ—Ç —Ä–∞–∑–º–µ—Ä –∏ —á–∏—Å–ª–æ —Å–ª–æ—Ç–æ–≤.\n"
        "‚Ä¢ –ß–∏–ø—Å–µ—Ç –∑–∞–¥–∞—ë—Ç —Ñ—É–Ω–∫—Ü–∏–∏ (—Ä–∞–∑–≥–æ–Ω, –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å—ã, –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–æ—Ä—Ç–æ–≤).\n"
        "‚Ä¢ VRM (–º–æ–¥—É–ª–∏ –ø–∏—Ç–∞–Ω–∏—è) –æ–±–µ—Å–ø–µ—á–∏–≤–∞–µ—Ç —Å—Ç–∞–±–∏–ª—å–Ω–æ–µ –Ω–∞–ø—Ä—è–∂–µ–Ω–∏–µ CPU.\n"
        "‚Ä¢ –°–ª–æ—Ç—ã PCIe, M.2, SATA; –ø–æ—Ä—Ç—ã USB, –∞—É–¥–∏–æ, Ethernet ‚Äî –¥–ª—è –ø–æ–¥–∫–ª—é—á–∞–µ–º—ã—Ö —É—Å—Ç—Ä–æ–π—Å—Ç–≤."
    ),
    (
        "–ë–ª–æ–∫¬†4. –ù–∞–∫–æ–ø–∏—Ç–µ–ª–∏ ‚Äî –¥–æ–ª–≥–æ—Å—Ä–æ—á–Ω–æ–µ —Ö—Ä–∞–Ω–µ–Ω–∏–µ üìö\n\n"
        "–ù–∞–∫–æ–ø–∏—Ç–µ–ª–∏ —Ö—Ä–∞–Ω—è—Ç –æ–ø–µ—Ä–∞—Ü–∏–æ–Ω–Ω—É—é —Å–∏—Å—Ç–µ–º—É –∏ —Ñ–∞–π–ª—ã:\n"
        "‚Ä¢ HDD: –¥–µ—à—ë–≤—ã–π, –±–æ–ª—å—à–æ–π –æ–±—ä—ë–º (1‚Äì10¬†–¢–ë), –≤—Ä–∞—â–µ–Ω–∏–µ 5400‚Äì7200¬†–æ–±/–º–∏–Ω.\n"
        "‚Ä¢ SATA SSD: –¥–æ¬†550¬†–ú–ë/—Å, –≥–æ—Ä–∞–∑–¥–æ –±—ã—Å—Ç—Ä–µ–µ HDD, –∫–æ–º–ø–∞–∫—Ç–Ω—ã–π.\n"
        "‚Ä¢ NVMe SSD: –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ PCIe, —Å–∫–æ—Ä–æ—Å—Ç—å 1,5‚Äì7¬†–ì–ë/—Å.\n"
        "‚Ä¢ –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏—è: –û–° –∏ –ø—Ä–æ–≥—Ä–∞–º–º—ã –Ω–∞ SSD, –±–æ–ª—å—à–∏–µ –∞—Ä—Ö–∏–≤—ã ‚Äî –Ω–∞ HDD."
    ),
    (
        "–ë–ª–æ–∫¬†5. –ë–ª–æ–∫ –ø–∏—Ç–∞–Ω–∏—è –∏ –æ—Ö–ª–∞–∂–¥–µ–Ω–∏–µ ‚ù§Ô∏è‚ùÑÔ∏è\n\n"
        "PSU –ø–∏—Ç–∞–µ—Ç –≤—Å–µ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã, –æ—Ö–ª–∞–∂–¥–µ–Ω–∏–µ –ø—Ä–µ–¥–æ—Ç–≤—Ä–∞—â–∞–µ—Ç –ø–µ—Ä–µ–≥—Ä–µ–≤:\n"
        "‚Ä¢ 80¬†PLUS Bronze/Gold/Platinum: —ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–æ—Å—Ç—å –æ—Ç¬†82% –¥–æ¬†94%+.\n"
        "‚Ä¢ –ú–æ–¥—É–ª—å–Ω—ã–µ –∫–∞–±–µ–ª–∏: –ø–æ–¥–∫–ª—é—á–∞–π—Ç–µ —Ç–æ–ª—å–∫–æ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ –¥–ª—è –∞–∫–∫—É—Ä–∞—Ç–Ω–æ–π —É–∫–ª–∞–¥–∫–∏.\n"
        "‚Ä¢ –í–æ–∑–¥—É—à–Ω—ã–µ –∫—É–ª–µ—Ä—ã: —Ä–∞–¥–∏–∞—Ç–æ—Ä + –≤–µ–Ω—Ç–∏–ª—è—Ç–æ—Ä ‚Äî –ø—Ä–æ—Å—Ç–æ–π –º–æ–Ω—Ç–∞–∂ –∏ –æ–±—Å–ª—É–∂–∏–≤–∞–Ω–∏–µ.\n"
        "‚Ä¢ AIO‚Äë—Å–∏—Å—Ç–µ–º—ã: –≤–æ–¥–æ–±–ª–æ–∫, —Ç—Ä—É–±–∫–∏, —Ä–∞–¥–∏–∞—Ç–æ—Ä ‚Äî –≤—ã—Å–æ–∫–∞—è —ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–æ—Å—Ç—å –ø—Ä–∏ –∞–∫–∫—É—Ä–∞—Ç–Ω–æ–π —É—Å—Ç–∞–Ω–æ–≤–∫–µ."
    ),
]

# –ü—Ä–æ–¥–≤–∏–Ω—É—Ç—ã–π –∫—É—Ä—Å: ¬´–ü—Ä–∞–∫—Ç–∏—á–µ—Å–∫–∞—è —Å–±–æ—Ä–∫–∞ –∏ –ø—Ä–æ–≤–µ—Ä–∫–∞¬ª (6 –±–ª–æ–∫–æ–≤)
ADVANCED_COURSE_BLOCKS = [
    (
        "–ë–ª–æ–∫¬†1. –ü–æ–¥–≥–æ—Ç–æ–≤–∫–∞ —Ä–∞–±–æ—á–µ–≥–æ –º–µ—Å—Ç–∞ –∏ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–æ–≤ üõ†Ô∏è\n\n"
        "1) –í—ã–±–µ—Ä–∏—Ç–µ —Ä–æ–≤–Ω—ã–π, —á–∏—Å—Ç—ã–π —Å—Ç–æ–ª –±–µ–∑ –∫–æ–≤—Ä–æ–≤ ‚Äî —ç—Ç–æ —Å–Ω–∏–∂–∞–µ—Ç —Å—Ç–∞—Ç–∏—á–µ—Å–∫–∏–π –∑–∞—Ä—è–¥.\n"
        "2) –ù–∞–¥–µ–Ω—å—Ç–µ –∞–Ω—Ç–∏—Å—Ç–∞—Ç–∏—á–µ—Å–∫–∏–π –±—Ä–∞—Å–ª–µ—Ç –∏–ª–∏ –ø–æ—Å—Ç–µ–ª–∏—Ç–µ –∞–Ω—Ç–∏—Å—Ç–∞—Ç–∏—á–µ—Å–∫–∏–π –∫–æ–≤—Ä–∏–∫.\n"
        "3) –†–∞–∑–ª–æ–∂–∏—Ç–µ –≤—Å—ë —Ç–∞–∫:\n"
        "   ‚Äì –ú–∞—Ç–µ—Ä–∏–Ω—Å–∫–∞—è –ø–ª–∞—Ç–∞ –Ω–∞ –∫–∞—Ä—Ç–æ–Ω–µ –∏–ª–∏ –∫–æ–≤—Ä–∏–∫–µ.\n"
        "   ‚Äì CPU, –∫—É–ª–µ—Ä, –û–ó–£, –Ω–∞–∫–æ–ø–∏—Ç–µ–ª–∏, –ë–ü –∏ –≤–∏–¥–µ–æ–∫–∞—Ä—Ç–∞ –ø–æ –æ—Ç–¥–µ–ª—å–Ω—ã–º –∑–æ–Ω–∞–º.\n"
        "4) –ü—Ä–∏–≥–æ—Ç–æ–≤—å—Ç–µ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã:\n"
        "   ‚Äì –û—Ç–≤—ë—Ä—Ç–∫–∏ PH1 –∏ PH2.\n"
        "   ‚Äì –ü–∏–Ω—Ü–µ—Ç –¥–ª—è –º–µ–ª–∫–∏—Ö –¥–µ—Ç–∞–ª–µ–π.\n"
        "   ‚Äì –ë–æ–∫–æ—Ä–µ–∑—ã –∏ —Å—Ç—è–∂–∫–∏ –¥–ª—è –∫–∞–±–µ–ª–µ–π.\n"
        "   ‚Äì –ö–æ–Ω—Ç–µ–π–Ω–µ—Ä –∏–ª–∏ –º–∞–≥–Ω–∏—Ç–Ω–∞—è –ø–æ–¥—Å—Ç–∞–≤–∫–∞ –¥–ª—è –≤–∏–Ω—Ç–æ–≤."
    ),
    (
        "–ë–ª–æ–∫¬†2. –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –ø—Ä–æ—Ü–µ—Å—Å–æ—Ä–∞ –∏ —Ç–µ—Ä–º–æ–ø–∞—Å—Ç—ã ‚õèÔ∏èüî•\n\n"
        "1) –ê–∫–∫—É—Ä–∞—Ç–Ω–æ –æ—Ç–∫—Ä–æ–π—Ç–µ —Ä—ã—á–∞–≥ —Å–æ–∫–µ—Ç–∞ –∏ –ø–æ–¥–Ω–∏–º–∏—Ç–µ —Ä–∞–º–∫—É.\n"
        "2) –°–æ–≤–º–µ—Å—Ç–∏—Ç–µ —Ç—Ä–µ—É–≥–æ–ª—å–Ω–∏–∫–∏ –Ω–∞ CPU –∏ –Ω–∞ —Å–æ–∫–µ—Ç–µ.\n"
        "3) –û–ø—É—Å—Ç–∏—Ç–µ –ø—Ä–æ—Ü–µ—Å—Å–æ—Ä —Ä–æ–≤–Ω–æ, –∑–∞—â—ë–ª–∫–Ω–∏—Ç–µ —Ä–∞–º–∫—É –∏ –∑–∞—Ñ–∏–∫—Å–∏—Ä—É–π—Ç–µ —Ä—ã—á–∞–≥.\n"
        "4) –ù–∞–Ω–µ—Å–∏—Ç–µ —Ç–µ—Ä–º–æ–ø–∞—Å—Ç—É:\n"
        "   ‚Äì –ö–∞–ø–ª—è —Ä–∞–∑–º–µ—Ä–æ–º —Å –≥–æ—Ä–æ—à–∏–Ω—É –≤ —Ü–µ–Ω—Ç—Ä –∫—Ä—ã—à–∫–∏ CPU.\n"
        "   ‚Äì –ü—Ä–∏ —É—Å—Ç–∞–Ω–æ–≤–∫–µ –∫—É–ª–µ—Ä–∞ –ø–∞—Å—Ç–∞ —Ä–∞—Å–ø—Ä–µ–¥–µ–ª–∏—Ç—Å—è —Ä–∞–≤–Ω–æ–º–µ—Ä–Ω–æ –ø–æ –ø–æ–≤–µ—Ä—Ö–Ω–æ—Å—Ç–∏."
    ),
    (
        "–ë–ª–æ–∫¬†3. –ú–æ–Ω—Ç–∞–∂ —Å–∏—Å—Ç–µ–º—ã –æ—Ö–ª–∞–∂–¥–µ–Ω–∏—è –∏ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –≤–µ–Ω—Ç–∏–ª—è—Ç–æ—Ä–æ–≤ ‚ùÑÔ∏èüîå\n\n"
        "–í–æ–∑–¥—É—à–Ω—ã–π –∫—É–ª–µ—Ä:\n"
        "‚Ä¢ –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ back‚Äëplate –∑–∞ –ø–ª–∞—Ç–æ–π, –ø—Ä–∏–∫—Ä—É—Ç–∏—Ç–µ —Å—Ç–æ–π–∫–∏ –∫—Ä–µ—Å—Ç‚Äë–Ω–∞–∫—Ä–µ—Å—Ç ¬´–æ—Ç —Ä—É–∫–∏¬ª.\n"
        "‚Ä¢ –ù–∞–¥–µ–Ω—å—Ç–µ —Ä–∞–¥–∏–∞—Ç–æ—Ä, –∑–∞—Ç–µ–º –≤–µ–Ω—Ç–∏–ª—è—Ç–æ—Ä, –Ω–∞–ø—Ä–∞–≤–∏–≤ —Å—Ç—Ä–µ–ª–∫—É –≤–æ–∑–¥—É—Ö–∞ –∫ –∑–∞–¥–Ω–µ–π –ø–∞–Ω–µ–ª–∏ –∫–æ—Ä–ø—É—Å–∞.\n"
        "‚Ä¢ –ü–æ–¥–∫–ª—é—á–∏—Ç–µ –∫–∞–±–µ–ª—å 4‚Äëpin –∫ —Ä–∞–∑—ä—ë–º—É CPU_FAN.\n\n"
        "AIO‚Äë—Å–∏—Å—Ç–µ–º–∞:\n"
        "‚Ä¢ –°–Ω–∏–º–∏—Ç–µ –∑–∞—â–∏—Ç–Ω—É—é –ø–ª—ë–Ω–∫—É —Å –≤–æ–¥–æ–±–ª–æ–∫–∞.\n"
        "‚Ä¢ –ó–∞–∫—Ä–µ–ø–∏—Ç–µ –≤–æ–¥–æ–±–ª–æ–∫ –Ω–∞ CPU –±–∞—Ä–∞—à–∫–æ–≤—ã–º–∏ –≥–∞–π–∫–∞–º–∏ –∫—Ä–µ—Å—Ç‚Äë–Ω–∞–∫—Ä–µ—Å—Ç.\n"
        "‚Ä¢ –ü—Ä–∏–∫—Ä–µ–ø–∏—Ç–µ —Ä–∞–¥–∏–∞—Ç–æ—Ä –∫ –∫–æ—Ä–ø—É—Å—É, –ø–æ–¥–∫–ª—é—á–∏—Ç–µ –≤–µ–Ω—Ç–∏–ª—è—Ç–æ—Ä—ã –∏ –ø–æ–º–ø—É –∫ PSU."
    ),
    (
        "–ë–ª–æ–∫¬†4. –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –ø–∞–º—è—Ç–∏ –∏ –≤–∏–¥–µ–æ–∫–∞—Ä—Ç—ã üß©üéÆ\n\n"
        "–û–ø–µ—Ä–∞—Ç–∏–≤–Ω–∞—è –ø–∞–º—è—Ç—å:\n"
        "‚Ä¢ –û—Ç–∫—Ä–æ–π—Ç–µ –∑–∞—â—ë–ª–∫–∏ —Å–ª–æ—Ç–æ–≤ A2 –∏ B2 –¥–ª—è –¥–≤—É—Ö–∫–∞–Ω–∞–ª—å–Ω–æ–≥–æ —Ä–µ–∂–∏–º–∞.\n"
        "‚Ä¢ –°–æ–≤–º–µ—Å—Ç–∏—Ç–µ –≤—ã—Ä–µ–∑—ã –º–æ–¥—É–ª—è —Å –∫–ª—é—á–æ–º —Å–ª–æ—Ç–∞, –Ω–∞–∂–º–∏—Ç–µ –¥–æ —â–µ–ª—á–∫–∞.\n"
        "‚Ä¢ –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –º–æ–¥—É–ª–∏ —Å—Ç–æ—è—Ç —Ä–æ–≤–Ω–æ –∏ –∑–∞—â—ë–ª–∫–∏ –∑–∞–∫—Ä—ã—Ç—ã.\n\n"
        "–í–∏–¥–µ–æ–∫–∞—Ä—Ç–∞:\n"
        "‚Ä¢ –°–Ω–∏–º–∏—Ç–µ –∑–∞–≥–ª—É—à–∫–∏ PCIe –Ω–∞ –∑–∞–¥–Ω–µ–π –ø–∞–Ω–µ–ª–∏ –∫–æ—Ä–ø—É—Å–∞.\n"
        "‚Ä¢ –í—Å—Ç–∞–≤—å—Ç–µ –∫–∞—Ä—Ç—É –≤ —Å–ª–æ—Ç PCIe¬†x16 –¥–æ —â–µ–ª—á–∫–∞ –∑–∞—â—ë–ª–∫–∏.\n"
        "‚Ä¢ –ó–∞–∫—Ä–µ–ø–∏—Ç–µ –≤–∏–Ω—Ç–æ–º, –ø–æ–¥–∫–ª—é—á–∏—Ç–µ –ø–∏—Ç–∞–Ω–∏–µ (6/8‚Äëpin –∏–ª–∏ 12VHPWR).\n"
        "‚Ä¢ –ü—Ä–∏ —Ç—è–∂—ë–ª—ã—Ö –∫–∞—Ä—Ç–∞—Ö –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—É—é –æ–ø–æ—Ä—É —Å–Ω–∏–∑—É."
    ),
    (
        "–ë–ª–æ–∫¬†5. –ù–∞–∫–æ–ø–∏—Ç–µ–ª–∏ –∏ –∫–∞–±–µ–ª—å‚Äë–º–µ–Ω–µ–¥–∂–º–µ–Ω—Ç üíæü™¢\n\n"
        "–ù–∞–∫–æ–ø–∏—Ç–µ–ª–∏:\n"
        "‚Ä¢ –ó–∞–∫—Ä–µ–ø–∏—Ç–µ 2.5‚Ä≥ SSD/HDD –≤–∏–Ω—Ç–∞–º–∏ –≤ –º–æ–Ω—Ç–∞–∂–Ω—ã—Ö –æ—Ç—Å–µ–∫–∞—Ö.\n"
        "‚Ä¢ –í—Å—Ç–∞–≤—å—Ç–µ M.2 SSD –ø–æ–¥ —É–≥–ª–æ–º ~30¬∞ –∏ –∑–∞–∫—Ä–µ–ø–∏—Ç–µ –≤–∏–Ω—Ç–æ–º‚Äë—Ñ–∏–∫—Å–∞—Ç–æ—Ä.\n\n"
        "–ö–∞–±–µ–ª–∏:\n"
        "‚Ä¢ SATA‚Äë–∫–∞–±–µ–ª—å –∫ –ø–ª–∞—Ç–µ –∏ –∫ –Ω–∞–∫–æ–ø–∏—Ç–µ–ª—é.\n"
        "‚Ä¢ –ü–∏—Ç–∞–Ω–∏–µ –æ—Ç –ë–ü (SATA Power) –∫ –Ω–∞–∫–æ–ø–∏—Ç–µ–ª—é.\n"
        "‚Ä¢ –ö–∞–±–µ–ª–∏ —Ñ—Ä–æ–Ω—Ç‚Äë–ø–∞–Ω–µ–ª–∏ (Power, Reset, LED) —Å—Ç—Ä–æ–≥–æ –ø–æ –º–∞—Ä–∫–∏—Ä–æ–≤–∫–µ –Ω–∞ PCB.\n\n"
        "–ú–µ–Ω–µ–¥–∂–º–µ–Ω—Ç:\n"
        "‚Ä¢ –ü—Ä—è—á—å—Ç–µ –∂–≥—É—Ç—ã –∑–∞ –ø–æ–¥–¥–æ–Ω–æ–º –∫–æ—Ä–ø—É—Å–∞.\n"
        "‚Ä¢ –§–∏–∫—Å–∏—Ä—É–π—Ç–µ —Å—Ç—è–∂–∫–∞–º–∏ –∫–∞–∂–¥—ã–µ 10‚Äì15¬†—Å–º –¥–ª—è —Å–≤–æ–±–æ–¥–Ω–æ–≥–æ –≤–æ–∑–¥—É—à–Ω–æ–≥–æ –ø–æ—Ç–æ–∫–∞."
    ),
    (
        "–ë–ª–æ–∫¬†6. –ü–µ—Ä–≤–∏—á–Ω—ã–π –∑–∞–ø—É—Å–∫, BIOS –∏ —É—Å—Ç–∞–Ω–æ–≤–∫–∞ –û–° üö¶üíª\n\n"
        "1) –ü–æ–¥–∫–ª—é—á–∏—Ç–µ –º–æ–Ω–∏—Ç–æ—Ä, –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É, –º—ã—à—å –∏ —Å–µ—Ç–µ–≤–æ–π –∫–∞–±–µ–ª—å.\n"
        "2) –í–∫–ª—é—á–∏—Ç–µ –ü–ö –∏ –Ω–∞–∂–º–∏—Ç–µ Delete/F2 –¥–ª—è –≤—Ö–æ–¥–∞ –≤ BIOS.\n"
        "3) –ü—Ä–æ–≤–µ—Ä—å—Ç–µ:\n"
        "   ‚Äì CPU –∏ –µ–≥–æ —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä—É –≤ –ø—Ä–æ—Å—Ç–æ–µ.\n"
        "   ‚Äì –û–±—ä—ë–º –∏ —Ä–∞—Å–ø–æ–ª–æ–∂–µ–Ω–∏–µ –º–æ–¥—É–ª–µ–π –û–ó–£.\n"
        "   ‚Äì –ù–∞–∫–æ–ø–∏—Ç–µ–ª–∏ –≤ —Å–ø–∏—Å–∫–µ —É—Å—Ç—Ä–æ–π—Å—Ç–≤.\n"
        "4) –°–æ—Ö—Ä–∞–Ω–∏—Ç–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –∏ –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∏—Ç–µ—Å—å —Å –∑–∞–≥—Ä—É–∑–æ—á–Ω–æ–≥–æ –Ω–æ—Å–∏—Ç–µ–ª—è.\n"
        "5) –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ –û–°:\n"
        "   ‚Äì –°–æ–∑–¥–∞–π—Ç–µ —Ä–∞–∑–¥–µ–ª—ã: EFI (~100¬†–ú–ë), MSR (~16¬†–ú–ë –¥–ª—è Windows), –æ—Å–Ω–æ–≤–Ω–æ–π —Ä–∞–∑–¥–µ–ª.\n"
        "   ‚Äì –°–ª–µ–¥—É–π—Ç–µ –ø–æ–¥—Å–∫–∞–∑–∫–∞–º —É—Å—Ç–∞–Ω–æ–≤—â–∏–∫–∞.\n"
        "6) –ü–æ—Å–ª–µ —É—Å—Ç–∞–Ω–æ–≤–∫–∏ –û–°:\n"
        "   ‚Äì –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ –¥—Ä–∞–π–≤–µ—Ä—ã —á–∏–ø—Å–µ—Ç–∞, GPU, –∞—É–¥–∏–æ, —Å–µ—Ç–∏.\n"
        "   ‚Äì –í—ã–ø–æ–ª–Ω–∏—Ç–µ –ø–æ–ª–Ω–æ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å–∏—Å—Ç–µ–º—ã."
    ),
]

# –ü—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω—ã–π –∫—É—Ä—Å: ¬´–û–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è –∏ –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞¬ª (7 –±–ª–æ–∫–æ–≤)
PROFESSIONAL_COURSE_BLOCKS = [
    (
        "–ë–ª–æ–∫¬†1. –ü—Ä–æ–µ–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –≤–æ–∑–¥—É—à–Ω–æ–≥–æ –ø–æ—Ç–æ–∫–∞ –∏ –∫—Ä–∏—Ç–∏—á–Ω—ã–µ –¥–µ—Ç–∞–ª–∏ üå¨Ô∏èüß∞\n\n"
        "–ü—Ä–∞–≤–∏–ª—å–Ω—ã–π airflow ‚Äî –∑–∞–ª–æ–≥ –Ω–∏–∑–∫–∏—Ö —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä –∏ —Ç–∏—Ö–æ–π —Ä–∞–±–æ—Ç—ã:\n"
        "1) Intake‚Äë–≤–µ–Ω—Ç–∏–ª—è—Ç–æ—Ä—ã —Å–ø–µ—Ä–µ–¥–∏ –∏/–∏–ª–∏ —Å–Ω–∏–∑—É –∫–æ—Ä–ø—É—Å–∞:\n"
        "   ‚Ä¢ –ü–æ–¥–±–∏—Ä–∞–π—Ç–µ —Å–∫–æ—Ä–æ—Å—Ç—å —Ç–∞–∫, —á—Ç–æ–±—ã –≤—Ö–æ–¥—è—â–µ–≥–æ –≤–æ–∑–¥—É—Ö–∞ –±—ã–ª–æ —á—É—Ç—å –±–æ–ª—å—à–µ, —á–µ–º –≤—ã—Ö–æ–¥—è—â–µ–≥–æ (–ø–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω–æ–µ –¥–∞–≤–ª–µ–Ω–∏–µ).\n"
        "   ‚Ä¢ –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–π—Ç–µ –ø—ã–ª–µ–≤—ã–µ —Ñ–∏–ª—å—Ç—Ä—ã –∏ —á–∏—Å—Ç–∏—Ç–µ –∏—Ö —Ä–µ–≥—É–ª—è—Ä–Ω–æ.\n\n"
        "2) Exhaust‚Äë–≤–µ–Ω—Ç–∏–ª—è—Ç–æ—Ä—ã —Å–≤–µ—Ä—Ö—É –∏ —Å–∑–∞–¥–∏:\n"
        "   ‚Ä¢ –£–¥–∞–ª—è—é—Ç –≥–æ—Ä—è—á–∏–π –≤–æ–∑–¥—É—Ö –∏–∑ –∫–æ—Ä–ø—É—Å–∞.\n"
        "   ‚Ä¢ –í—ã—Å–æ—Ç–∞ —É—Å—Ç–∞–Ω–æ–≤–∫–∏ –≤–ª–∏—è–µ—Ç –Ω–∞ —ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–æ—Å—Ç—å —É–¥–∞–ª–µ–Ω–∏—è –Ω–∞–≥—Ä–µ—Ç–æ–≥–æ –≤–æ–∑–¥—É—Ö–∞.\n\n"
        "3) –í–Ω—É—Ç—Ä–µ–Ω–Ω–µ–µ –ø—Ä–æ—Å—Ç—Ä–∞–Ω—Å—Ç–≤–æ:\n"
        "   ‚Ä¢ –ö–∞–±–µ–ª–∏ –Ω–µ –¥–æ–ª–∂–Ω—ã –ø—Ä–µ–ø—è—Ç—Å—Ç–≤–æ–≤–∞—Ç—å –ø–æ—Ç–æ–∫—É –≤–æ–∑–¥—É—Ö–∞ ‚Äî –ø—Ä—è—á—å—Ç–µ –∏—Ö –∑–∞ –ø–æ–¥–¥–æ–Ω–æ–º –∏ —Ñ–∏–∫—Å–∏—Ä—É–π—Ç–µ —Å—Ç—è–∂–∫–∞–º–∏.\n"
        "   ‚Ä¢ –†–∞—Å–ø–æ–ª–æ–∂–µ–Ω–∏–µ –Ω–∞–∫–æ–ø–∏—Ç–µ–ª–µ–π –Ω–µ –¥–æ–ª–∂–Ω–æ –±–ª–æ–∫–∏—Ä–æ–≤–∞—Ç—å intake-–≤–µ–Ω—Ç–∏–ª—è—Ç–æ—Ä—ã.\n\n"
        "4) –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥:\n"
        "   ‚Ä¢ –°—Ä–∞–≤–Ω–∏–≤–∞–π—Ç–µ —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä—ã GPU/CPU –≤ –ø—Ä–æ—Å—Ç–æ–µ –∏ –ø–æ–¥ –Ω–∞–≥—Ä—É–∑–∫–æ–π, –∫–æ—Ä—Ä–µ–∫—Ç–∏—Ä—É–π—Ç–µ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é –ø—Ä–∏ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç–∏."
    ),
    (
        "–ë–ª–æ–∫¬†2. –≠–ª–µ–∫—Ç—Ä–æ—Å—Ç–∞—Ç–∏—á–µ—Å–∫–∞—è –∑–∞—â–∏—Ç–∞ –∏ –ø—Ä–æ—Ñ–∏–ª–∞–∫—Ç–∏–∫–∞ ‚ö°üõ°Ô∏è\n\n"
        "–ó–∞—â–∏—Ç–∞ –æ—Ç ESD ‚Äî –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–π —ç—Ç–∞–ø —Å–±–æ—Ä–∫–∏:\n"
        "1) –ê–Ω—Ç–∏—Å—Ç–∞—Ç–∏—á–µ—Å–∫–∏–π –±—Ä–∞—Å–ª–µ—Ç:\n"
        "   ‚Ä¢ –ù–∞–¥–µ–≤–∞–π—Ç–µ –Ω–∞ –∑–∞–ø—è—Å—Ç—å–µ –∏ –∑–∞–∑–µ–º–ª—è–π—Ç–µ –Ω–∞ –∫–æ—Ä–ø—É—Å –ë–ü.\n"
        "   ‚Ä¢ –ü—Ä–æ–≤–µ—Ä—è–π—Ç–µ –∫–æ–Ω—Ç–∞–∫—Ç –∫–∞–∂–¥—ã–µ 10‚Äì15¬†–º–∏–Ω—É—Ç –≤–æ –≤—Ä–µ–º—è —Ä–∞–±–æ—Ç—ã.\n\n"
        "2) –ê–Ω—Ç–∏—Å—Ç–∞—Ç–∏—á–µ—Å–∫–∏–π –∫–æ–≤—Ä–∏–∫:\n"
        "   ‚Ä¢ –ü–æ–¥–ª–æ–∂–∏—Ç–µ –ø–æ–¥ –º–∞—Ç–µ—Ä–∏–Ω—Å–∫—É—é –ø–ª–∞—Ç—É –∏ –º–µ–ª–∫–∏–µ –¥–µ—Ç–∞–ª–∏.\n"
        "   ‚Ä¢ –†–∞–±–æ—Ç–∞–π—Ç–µ –±–æ—Å–∏–∫–æ–º –∏–ª–∏ –≤ –æ–±—É–≤–∏ –Ω–∞ –Ω–µ—Å–∫–æ–ª—å–∑—è—â–µ–π –ø–æ–¥–æ—à–≤–µ.\n\n"
        "3) –û–∫—Ä—É–∂–µ–Ω–∏–µ:\n"
        "   ‚Ä¢ –°–Ω–∏–º–∞–π—Ç–µ —Å–∏–Ω—Ç–µ—Ç–∏—á–µ—Å–∫—É—é –æ–¥–µ–∂–¥—É ‚Äî –æ–Ω–∞ –≥–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç —Å—Ç–∞—Ç–∏–∫—É.\n"
        "   ‚Ä¢ –ü–æ–¥–¥–µ—Ä–∂–∏–≤–∞–π—Ç–µ –≤–ª–∞–∂–Ω–æ—Å—Ç—å 40‚Äì60¬†% –¥–ª—è —Å–Ω–∏–∂–µ–Ω–∏—è —Ä–∏—Å–∫–∞ ESD."
    ),
    (
        "–ë–ª–æ–∫¬†3. –ö–∞–±–µ–ª—å‚Äë–º–µ–Ω–µ–¥–∂–º–µ–Ω—Ç –∏ —ç—Å—Ç–µ—Ç–∏–∫–∞ —Å–±–æ—Ä–∫–∏ üé®üîó\n\n"
        "–£–ø–æ—Ä—è–¥–æ—á–µ–Ω–Ω–∞—è –ø—Ä–æ–≤–æ–¥–∫–∞ —É–ª—É—á—à–∞–µ—Ç airflow –∏ –≤–Ω–µ—à–Ω–∏–π –≤–∏–¥:\n"
        "1) –ì—Ä—É–ø–ø–∏—Ä–æ–≤–∫–∞:\n"
        "   ‚Ä¢ –ü–∏—Ç–∞–Ω–∏–µ (24‚Äëpin, EPS, PCIe) –ø–æ –æ–¥–Ω–æ–π —Å—Ç–æ—Ä–æ–Ω–µ –∫–æ—Ä–ø—É—Å–∞.\n"
        "   ‚Ä¢ –î–∞–Ω–Ω—ã–µ (SATA, USB) –ø–∞—Ä–∞–ª–ª–µ–ª—å–Ω—ã–º–∏ –∂–≥—É—Ç–∞–º–∏.\n\n"
        "2) –§–∏–∫—Å–∞—Ü–∏—è:\n"
        "   ‚Ä¢ –°—Ç—è–∂–∫–∏ –∏–ª–∏ –ª–∏–ø—É—á–∫–∏ –∫–∞–∂–¥—ã–µ 10‚Äì15¬†—Å–º.\n"
        "   ‚Ä¢ –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–∞–±–µ–ª—å–Ω—ã–µ –∫–∞–Ω–∞–ª—ã –∏ –æ—Ç–≤–µ—Ä—Å—Ç–∏—è –∫–æ—Ä–ø—É—Å–∞.\n\n"
        "3) –ú–∞—Ä–∫–∏—Ä–æ–≤–∫–∞:\n"
        "   ‚Ä¢ –¶–≤–µ—Ç–Ω—ã–µ –∫–∞–±–µ–ª–∏ –∏–ª–∏ –º–µ—Ç–∫–∏ –ø–æ–º–æ–≥–∞—é—Ç –ø—Ä–∏ –æ–±—Å–ª—É–∂–∏–≤–∞–Ω–∏–∏.\n"
        "   ‚Ä¢ –û—Ç–º–µ—á–∞–π—Ç–µ –æ—Å–Ω–æ–≤–Ω—ã–µ —Ä–∞–∑—ä—ë–º—ã (USB, SATA, ARGB)."
    ),
    (
        "–ë–ª–æ–∫¬†4. –†–∞–∑–≥–æ–Ω (OC) –∏ —Å—Ç—Ä–µ—Å—Å‚Äë—Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ üí™üìà\n\n"
        "–ü–æ–≤—ã—à–µ–Ω–∏–µ –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏ –±–µ–∑ –ø–æ—Ç–µ—Ä–∏ —Å—Ç–∞–±–∏–ª—å–Ω–æ—Å—Ç–∏:\n"
        "1) –ù–∞—Å—Ç—Ä–æ–π–∫–∏ BIOS:\n"
        "   ‚Ä¢ –í–∫–ª—é—á–∏—Ç–µ XMP/DOCP –ø—Ä–æ—Ñ–∏–ª—å –ø–∞–º—è—Ç–∏ –¥–ª—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–π –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ —á–∞—Å—Ç–æ—Ç—ã.\n"
        "   ‚Ä¢ –ü–æ–≤—ã—à–∞–π—Ç–µ –º–Ω–æ–∂–∏—Ç–µ–ª—å CPU –∏ Vcore –º–∞–ª—ã–º–∏ —à–∞–≥–∞–º–∏ (–ø–æ 100¬†–ú–ì—Ü –∏ +0.01¬†–í).\n\n"
        "2) –°—Ç—Ä–µ—Å—Å‚Äë—Ç–µ—Å—Ç—ã:\n"
        "   ‚Ä¢ Prime95/Blend –¥–ª—è CPU ‚Äî —Å–ª–µ–¥–∏—Ç–µ –∑–∞ —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞–º–∏ –∏ —Å—Ç–∞–±–∏–ª—å–Ω–æ—Å—Ç—å—é.\n"
        "   ‚Ä¢ MemTest86 –¥–ª—è RAM ‚Äî –º–∏–Ω–∏–º—É–º 4 –ø—Ä–æ—Ö–æ–¥–∞.\n\n"
        "3) –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥:\n"
        "   ‚Ä¢ –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ HWiNFO –∏–ª–∏ AIDA64 –¥–ª—è –≥—Ä–∞—Ñ–∏–∫–æ–≤ —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä—ã –∏ –Ω–∞–ø—Ä—è–∂–µ–Ω–∏–π.\n"
        "   ‚Ä¢ –í–µ–¥–∏—Ç–µ –ª–æ–≥–∏, —á—Ç–æ–±—ã –≤–∏–¥–µ—Ç—å –¥–∏–Ω–∞–º–∏–∫—É –∏–∑–º–µ–Ω–µ–Ω–∏–π."
    ),
    (
        "–ë–ª–æ–∫¬†5. –°—Ç–∞–±–∏–ª—å–Ω–æ—Å—Ç—å –ø—Ä–∏ –≤—ã—Å–æ–∫–∏—Ö –Ω–∞–≥—Ä—É–∑–∫–∞—Ö üèãÔ∏è‚Äç‚ôÇÔ∏èüîã\n\n"
        "–ù–∞–¥—ë–∂–Ω–æ–µ –ø–∏—Ç–∞–Ω–∏–µ –∏ –∑–∞—â–∏—Ç–∞:\n"
        "1) PSU —Å –∑–∞–ø–∞—Å–æ–º –º–æ—â–Ω–æ—Å—Ç–∏ 20‚Äì30¬†% –æ—Ç –ø–æ—Ç—Ä–µ–±–ª–µ–Ω–∏—è —Å–∏—Å—Ç–µ–º—ã –∏ —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç–æ–º 80¬†PLUS Gold/Platinum.\n"
        "2) –ò–ë–ü (UPS) –¥–ª—è –∑–∞—â–∏—Ç—ã –æ—Ç –æ—Ç–∫–ª—é—á–µ–Ω–∏–π –∏ –ø—Ä–æ—Å–∞–¥–æ–∫ –Ω–∞–ø—Ä—è–∂–µ–Ω–∏—è.\n"
        "3) –°–µ—Ç–µ–≤–æ–π —Ñ–∏–ª—å—Ç—Ä —Å AV‚Äë–∑–∞—â–∏—Ç–æ–π –æ—Ç –∏–º–ø—É–ª—å—Å–Ω—ã—Ö –ø–æ–º–µ—Ö.\n"
        "4) –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –ø–æ—Ç—Ä–µ–±–ª–µ–Ω–∏—è —á–µ—Ä–µ–∑ BIOS/OS ‚Äî –∫–æ—Ä—Ä–µ–∫—Ç–∏—Ä—É–π—Ç–µ —á–∞—Å—Ç–æ—Ç—ã –ø—Ä–∏ –ø–µ—Ä–µ–≥—Ä—É–∑–∫–∞—Ö."
    ),
    (
        "–ë–ª–æ–∫¬†6. –°–∏—Å—Ç–µ–º–Ω—ã–π –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –∏ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ üìäüìù\n\n"
        "–ù–µ–ø—Ä–µ—Ä—ã–≤–Ω—ã–π –∫–æ–Ω—Ç—Ä–æ–ª—å –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤ –ø—Ä–æ–¥–ª–µ–≤–∞–µ—Ç —Å—Ä–æ–∫–∏ —Å–ª—É–∂–±—ã –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤:\n"
        "1) –ü–û –¥–ª—è –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞:\n"
        "   ‚Ä¢ HWiNFO, MSI Afterburner, AIDA64 ‚Äî –≤ —Ä–µ–∞–ª—å–Ω–æ–º –≤—Ä–µ–º–µ–Ω–∏ –ø–æ–∫–∞–∑—ã–≤–∞—é—Ç —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä—É, –æ–±–æ—Ä–æ—Ç—ã –≤–µ–Ω—Ç–∏–ª—è—Ç–æ—Ä–æ–≤ –∏ –Ω–∞–ø—Ä—è–∂–µ–Ω–∏—è.\n"
        "   ‚Ä¢ –í–∫–ª—é—á–∏—Ç–µ –∑–∞–ø–∏—Å—å –ª–æ–≥–æ–≤ –∏–ª–∏ OSD‚Äë–æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –Ω–∞ —ç–∫—Ä–∞–Ω–µ.\n\n"
        "2) –û–ø–æ–≤–µ—â–µ–Ω–∏—è:\n"
        "   ‚Ä¢ –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ –ø–æ—Ä–æ–≥–∏ (–Ω–∞–ø—Ä–∏–º–µ—Ä, CPU > 80¬†¬∞C) ‚Äî –ø–æ–ª—É—á–∏—Ç–µ –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ –∏–ª–∏ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ –ø–æ–Ω–∏–∂–µ–Ω–∏–µ —á–∞—Å—Ç–æ—Ç.\n\n"
        "3) –ê–Ω–∞–ª–∏–∑ —Ç—Ä–µ–Ω–¥–æ–≤:\n"
        "   ‚Ä¢ –°—Ä–∞–≤–Ω–∏–≤–∞–π—Ç–µ –≥—Ä–∞—Ñ–∏–∫–∏ –∑–∞ –º–µ—Å—è—Ü—ã/–≥–æ–¥—ã –¥–ª—è –ø—Ä–æ–≥–Ω–æ–∑–∏—Ä–æ–≤–∞–Ω–∏—è –∏–∑–Ω–æ—Å–∞ —Ç–µ—Ä–º–æ–ø–∞—Å—Ç—ã –∏ –≤–µ–Ω—Ç–∏–ª—è—Ç–æ—Ä–æ–≤."
    ),
    (
        "–ë–ª–æ–∫¬†7. –î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ –∏ —É—Å—Ç—Ä–∞–Ω–µ–Ω–∏–µ –Ω–µ–∏—Å–ø—Ä–∞–≤–Ω–æ—Å—Ç–µ–π üïµÔ∏è‚Äç‚ôÇÔ∏èüîß\n\n"
        "–ú–µ—Ç–æ–¥–∏—á–Ω–æ–µ –≤—ã—è–≤–ª–µ–Ω–∏–µ –∏ —Ä–µ—à–µ–Ω–∏–µ –ø—Ä–æ–±–ª–µ–º:\n"
        "1) –°–±–æ—Ä–∫–∞ –º–∏–Ω–∏–º–∞–ª—å–Ω–æ–π –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ (CPU + RAM + GPU) –∏ –∑–∞–ø—É—Å–∫ POST ‚Äî –∏–∑–æ–ª—è—Ü–∏—è –Ω–µ–∏—Å–ø—Ä–∞–≤–Ω–æ—Å—Ç–µ–π.\n"
        "2) –ü–æ–æ—á–µ—Ä—ë–¥–Ω–æ–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –Ω–∞–∫–æ–ø–∏—Ç–µ–ª–µ–π, –≤–µ–Ω—Ç–∏–ª—è—Ç–æ—Ä–æ–≤ –∏ –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã—Ö –ø–ª–∞—Ç —Å –∫–∞–∂–¥—ã–º –∑–∞–ø—É—Å–∫–æ–º.\n"
        "3) –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ POST‚Äë–∫–æ–¥–æ–≤ –∏ –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä–æ–≤ –Ω–∞ –ø–ª–∞—Ç–µ –¥–ª—è –±—ã—Å—Ç—Ä–æ–π –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∏.\n"
        "4) –°–±—Ä–æ—Å CMOS –∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ BIOS –¥–ª—è —É—Å—Ç—Ä–∞–Ω–µ–Ω–∏—è –ø—Ä–æ–±–ª–µ–º —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç–∏."
    ),
]

# ‚îÄ‚îÄ‚îÄ –ö–†–ê–¢–ö–ò–ï –û–ü–ò–°–ê–ù–ò–Ø ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ

BASIC_SUMMARY        = "üìò –ë–∞–∑–æ–≤—ã–π –∫—É—Ä—Å (5 –±–ª–æ–∫–æ–≤). –ö—Ä–∞—Ç–∫–∏–π –æ–±–∑–æ—Ä –∫–ª—é—á–µ–≤—ã—Ö –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤ –ü–ö."
ADVANCED_SUMMARY     = "üìó –ü—Ä–æ–¥–≤–∏–Ω—É—Ç—ã–π –∫—É—Ä—Å (6 –±–ª–æ–∫–æ–≤). –ü–æ—à–∞–≥–æ–≤–∞—è —Å–±–æ—Ä–∫–∞ –∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ."
PROFESSIONAL_SUMMARY = "üìô –ü—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω—ã–π –∫—É—Ä—Å (7 –±–ª–æ–∫–æ–≤). –ì–ª—É–±–æ–∫–∞—è –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è –∏ –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞."

# ‚îÄ‚îÄ‚îÄ –ì–õ–ê–í–ù–û–ï –ú–ï–ù–Æ ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ

MAIN_MENU_TEXT = (
    "üëã –ü—Ä–∏–≤–µ—Ç! –Ø –ê–∫–∞–¥–µ–º–∏—è¬†–ü–ö ‚Äî –≤–∞—à –Ω–∞–¥—ë–∂–Ω—ã–π –ø–æ–º–æ—â–Ω–∏–∫.\n\n"
    "‚Ä¢ –ê—Å—Å–∏—Å—Ç–µ–Ω—Ç —Å–±–æ—Ä–∫–∏ –ü–ö ‚Äî –ø–æ—à–∞–≥–æ–≤–∞—è –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—è —Å–±–æ—Ä–∫–∏.\n"
    "‚Ä¢ –û–±—É—á–∞—é—â–∏–π —Ä–µ–∂–∏–º ‚Äî –∫—É—Ä—Å—ã –∏ —Ç–µ—Å—Ç—ã –¥–ª—è –ª—é–±–æ–≥–æ —É—Ä–æ–≤–Ω—è.\n"
    "‚Ä¢ –ò–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω—ã–π —Ä–µ–∂–∏–º ‚Äî –ø—Ä–æ–≤–µ—Ä–∫–∞ –∑–Ω–∞–Ω–∏–π –≤ –∏–≥—Ä–æ–≤–æ–π —Ñ–æ—Ä–º–µ.\n\n"
    "–í—ã–±–µ—Ä–∏—Ç–µ —Ä–µ–∂–∏–º:"
)

def build_main_menu_keyboard():
    return InlineKeyboardMarkup([
        [InlineKeyboardButton("–ê—Å—Å–∏—Å—Ç–µ–Ω—Ç —Å–±–æ—Ä–∫–∏ –ü–ö", callback_data="assistant_pc")],
        [InlineKeyboardButton("–û–±—É—á–∞—é—â–∏–π —Ä–µ–∂–∏–º", callback_data="educational_mode")],
        [InlineKeyboardButton("–ò–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω—ã–π —Ä–µ–∂–∏–º", callback_data="game_mode")]
    ])

def format_header(header: str) -> str:
    if header == "–û–±—É—á–µ–Ω–∏–µ":
        return f"üéì {header} üéì"
    if header == "–¢–µ—Å—Ç":
        return f"üìù {header} üìù"
    return header

def minimal_send_message(text: str, header: str = "") -> str:
    return f"<b>{format_header(header)}</b>\n{text}" if header else text

async def send_stage_message(update: Update, text: str, header: str = "", reply_markup=None):
    await update.effective_message.reply_text(
        minimal_send_message(text, header),
        parse_mode='HTML',
        reply_markup=reply_markup
    )

# ‚îÄ‚îÄ‚îÄ –ò–ù–¢–ï–ì–†–ê–¶–ò–Ø –ö–ù–û–ü–ö–ò "–ì–õ–ê–í–ù–û–ï –ú–ï–ù–Æ" ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ

async def edu_go_home(update: Update, context: ContextTypes.DEFAULT_TYPE):
    query = update.callback_query
    await query.answer()
    # –ª–µ–Ω–∏–≤—ã–π –∏–º–ø–æ—Ä—Ç, —á—Ç–æ–±—ã –∏–∑–±–µ–∂–∞—Ç—å —Ü–∏–∫–ª–∏—á–µ—Å–∫–æ–≥–æ –∏–º–ø–æ—Ä—Ç–∞
    from main import start_main_menu
    # –æ—á–∏—â–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ
    set_user_data(update.effective_chat.id, {})
    await start_main_menu(update, context)

# ‚îÄ‚îÄ‚îÄ –°–¢–ê–†–¢ –ò –í–´–ë–û–† –ö–£–†–°–ê ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ

async def start_educational_mode(update: Update, context: ContextTypes.DEFAULT_TYPE):
    # —Å–±—Ä–æ—Å –ø—Ä–µ–¥—ã–¥—É—â–µ–≥–æ –ø—Ä–æ–≥—Ä–µ—Å—Å–∞
    set_user_data(update.effective_chat.id, {})
    text = "üéì –†–µ–∂–∏–º –æ–±—É—á–µ–Ω–∏—è üéì\n\n–í—ã–±–µ—Ä–∏—Ç–µ –∫—É—Ä—Å –¥–ª—è –∏–∑—É—á–µ–Ω–∏—è:"
    kb = InlineKeyboardMarkup([
        [InlineKeyboardButton("üìò –ë–∞–∑–æ–≤—ã–π –∫—É—Ä—Å", callback_data="basic_course")],
        [InlineKeyboardButton("üìó –ü—Ä–æ–¥–≤–∏–Ω—É—Ç—ã–π –∫—É—Ä—Å", callback_data="advanced_course")],
        [InlineKeyboardButton("üìô –ü—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω—ã–π –∫—É—Ä—Å", callback_data="professional_course")],
        [InlineKeyboardButton("üè† –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", callback_data="edu_home")]
    ])
    await update.effective_message.reply_text(text, reply_markup=kb)

async def basic_course_summary(update: Update, context: ContextTypes.DEFAULT_TYPE):
    text = f"{BASIC_SUMMARY}\n\n–ù–∞–∂–º–∏—Ç–µ ¬´–ù–∞—á–∞—Ç—å¬ª, —á—Ç–æ–±—ã –ø—Ä–∏—Å—Ç—É–ø–∏—Ç—å –∫ –±–∞–∑–æ–≤–æ–º—É –∫—É—Ä—Å—É."
    kb = InlineKeyboardMarkup([[
        InlineKeyboardButton("–ù–∞–∑–∞–¥", callback_data="edu_back"),
        InlineKeyboardButton("–ù–∞—á–∞—Ç—å", callback_data="basic_start"),
        InlineKeyboardButton("üè† –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", callback_data="edu_home")
    ]])
    await update.effective_message.edit_text(text, reply_markup=kb, parse_mode='HTML')

async def advanced_course_summary(update: Update, context: ContextTypes.DEFAULT_TYPE):
    text = f"{ADVANCED_SUMMARY}\n\n–ù–∞–∂–º–∏—Ç–µ ¬´–ù–∞—á–∞—Ç—å¬ª, —á—Ç–æ–±—ã –ø—Ä–∏—Å—Ç—É–ø–∏—Ç—å –∫ –ø—Ä–æ–¥–≤–∏–Ω—É—Ç–æ–º—É –∫—É—Ä—Å—É."
    kb = InlineKeyboardMarkup([[
        InlineKeyboardButton("–ù–∞–∑–∞–¥", callback_data="edu_back"),
        InlineKeyboardButton("–ù–∞—á–∞—Ç—å", callback_data="advanced_start"),
        InlineKeyboardButton("üè† –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", callback_data="edu_home")
    ]])
    await update.effective_message.edit_text(text, reply_markup=kb, parse_mode='HTML')

async def professional_course_summary(update: Update, context: ContextTypes.DEFAULT_TYPE):
    text = f"{PROFESSIONAL_SUMMARY}\n\n–ù–∞–∂–º–∏—Ç–µ ¬´–ù–∞—á–∞—Ç—å¬ª, —á—Ç–æ–±—ã –ø—Ä–∏—Å—Ç—É–ø–∏—Ç—å –∫ –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω–æ–º—É –∫—É—Ä—Å—É."
    kb = InlineKeyboardMarkup([[
        InlineKeyboardButton("–ù–∞–∑–∞–¥", callback_data="edu_back"),
        InlineKeyboardButton("–ù–∞—á–∞—Ç—å", callback_data="professional_start"),
        InlineKeyboardButton("üè† –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", callback_data="edu_home")
    ]])
    await update.effective_message.edit_text(text, reply_markup=kb, parse_mode='HTML')

def get_course_blocks(course: str):
    return {
        "basic": BASIC_COURSE_BLOCKS,
        "advanced": ADVANCED_COURSE_BLOCKS,
        "professional": PROFESSIONAL_COURSE_BLOCKS
    }.get(course, [])

async def start_course(update: Update, context: ContextTypes.DEFAULT_TYPE, course: str):
    chat_id = update.effective_chat.id
    set_user_data(chat_id, {"edu_course": course, "block_index": 0})
    await show_course_block(update, context)

async def basic_start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    await start_course(update, context, "basic")

async def advanced_start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    await start_course(update, context, "advanced")

async def professional_start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    await start_course(update, context, "professional")

async def show_course_block(update: Update, context: ContextTypes.DEFAULT_TYPE):
    query = update.callback_query
    await query.answer()
    chat_id = query.message.chat_id
    data = get_user_data(chat_id)
    blocks = get_course_blocks(data.get("edu_course", ""))
    idx = data.get("block_index", 0)
    if idx < len(blocks):
        text = blocks[idx]
        buttons = []
        if idx > 0:
            buttons.append(InlineKeyboardButton("–ù–∞–∑–∞–¥", callback_data="course_prev"))
        else:
            buttons.append(InlineKeyboardButton("–ù–∞–∑–∞–¥", callback_data="edu_back"))
        if idx < len(blocks) - 1:
            buttons.append(InlineKeyboardButton("–î–∞–ª—å—à–µ", callback_data="course_next"))
        else:
            buttons.append(InlineKeyboardButton("–ó–∞–≤–µ—Ä—à–∏—Ç—å –∫—É—Ä—Å", callback_data="course_finish"))
        buttons.append(InlineKeyboardButton("üè† –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", callback_data="edu_home"))
        kb = InlineKeyboardMarkup([buttons])
        await send_stage_message(update, text, header="–û–±—É—á–µ–Ω–∏–µ", reply_markup=kb)
    else:
        kb = InlineKeyboardMarkup([[InlineKeyboardButton("üè† –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", callback_data="edu_home")]])
        await send_stage_message(update, "–í—ã —É—Å–ø–µ—à–Ω–æ –∑–∞–≤–µ—Ä—à–∏–ª–∏ –∫—É—Ä—Å!", header="–û–±—É—á–µ–Ω–∏–µ", reply_markup=kb)

async def course_next(update: Update, context: ContextTypes.DEFAULT_TYPE):
    query = update.callback_query
    await query.answer()
    chat_id = query.message.chat_id
    data = get_user_data(chat_id)
    data["block_index"] = data.get("block_index", 0) + 1
    set_user_data(chat_id, data)
    await show_course_block(update, context)

async def course_prev(update: Update, context: ContextTypes.DEFAULT_TYPE):
    query = update.callback_query
    await query.answer()
    chat_id = query.message.chat_id
    data = get_user_data(chat_id)
    idx = data.get("block_index", 0)
    if idx > 0:
        data["block_index"] = idx - 1
        set_user_data(chat_id, data)
        await show_course_block(update, context)
    else:
        course = data.get("edu_course", "")
        if course == "basic":
            await basic_course_summary(update, context)
        elif course == "advanced":
            await advanced_course_summary(update, context)
        else:
            await professional_course_summary(update, context)

async def course_finish(update: Update, context: ContextTypes.DEFAULT_TYPE):
    query = update.callback_query
    await query.answer()
    kb = InlineKeyboardMarkup([
        [InlineKeyboardButton("–ü—Ä–æ–π—Ç–∏ —Ç–µ—Å—Ç", callback_data="test_start")],
        [InlineKeyboardButton("üè† –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", callback_data="edu_home")]
    ])
    await send_stage_message(update, "–í—ã —É—Å–ø–µ—à–Ω–æ –∑–∞–≤–µ—Ä—à–∏–ª–∏ –∫—É—Ä—Å!", header="–û–±—É—á–µ–Ω–∏–µ", reply_markup=kb)

# ‚îÄ‚îÄ‚îÄ –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï –° –†–ê–ó–ë–û–†–û–ú –û–®–ò–ë–û–ö ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ

BASIC_TEST = [
    {"question": "–ö–∞–∫–æ–≤–∞ –æ—Å–Ω–æ–≤–Ω–∞—è —Ä–æ–ª—å –ø—Ä–æ—Ü–µ—Å—Å–æ—Ä–∞?", "options": ["–•—Ä–∞–Ω–∏—Ç —Ñ–∞–π–ª—ã", "–í—ã–ø–æ–ª–Ω—è–µ—Ç –∫–æ–º–∞–Ω–¥—ã", "–û—Ö–ª–∞–∂–¥–∞–µ—Ç —Å–∏—Å—Ç–µ–º—É"], "correct": 1},
    {"question": "–î–ª—è —á–µ–≥–æ –Ω—É–∂–Ω–∞ –æ–ø–µ—Ä–∞—Ç–∏–≤–Ω–∞—è –ø–∞–º—è—Ç—å?", "options": ["–í—Ä–µ–º–µ–Ω–Ω–æ–µ —Ö—Ä–∞–Ω–∏–ª–∏—â–µ –¥–∞–Ω–Ω—ã—Ö", "–ü–∏—Ç–∞–Ω–∏–µ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤", "–û—Ö–ª–∞–∂–¥–µ–Ω–∏–µ"], "correct": 0},
    {"question": "–ß—Ç–æ –¥–µ–ª–∞–µ—Ç –º–∞—Ç–µ—Ä–∏–Ω—Å–∫–∞—è –ø–ª–∞—Ç–∞?", "options": ["–°–æ–µ–¥–∏–Ω—è–µ—Ç –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã", "–£–≤–µ–ª–∏—á–∏–≤–∞–µ—Ç —Å–∫–æ—Ä–æ—Å—Ç—å –∏–Ω—Ç–µ—Ä–Ω–µ—Ç–∞", "–ó–∞–ø—É—Å–∫–∞–µ—Ç –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è"], "correct": 0},
]
ADVANCED_TEST = [
    {"question": "–ß—Ç–æ –Ω—É–∂–Ω–æ –ø–æ–¥–≥–æ—Ç–æ–≤–∏—Ç—å –ø–µ—Ä–µ–¥ —Å–±–æ—Ä–∫–æ–π?", "options": ["–ß–∏—Å—Ç–æ–µ –º–µ—Å—Ç–æ –∏ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã", "–¢–æ–ª—å–∫–æ –æ—Ç–≤–µ—Ä—Ç–∫—É", "–¢–æ–ª—å–∫–æ –≤–∏–Ω—Ç—ã"], "correct": 0},
    {"question": "–ó–∞—á–µ–º –Ω—É–∂–Ω–∞ —Ç–µ—Ä–º–æ–ø–∞—Å—Ç–∞?", "options": ["–î–ª—è –æ—Ç–≤–æ–¥–∞ —Ç–µ–ø–ª–∞", "–î–ª—è –ø–∏—Ç–∞–Ω–∏—è –∫—É–ª–µ—Ä–∞", "–î–ª—è –∑–≤—É–∫–∞"], "correct": 0},
    {"question": "–ß—Ç–æ –ø—Ä–æ–≤–µ—Ä—è–µ—Ç—Å—è –≤ BIOS –ø—Ä–∏ –ø–µ—Ä–≤–æ–º –∑–∞–ø—É—Å–∫–µ?", "options": ["–†–∞—Å–ø–æ–∑–Ω–∞–≤–∞–Ω–∏–µ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤", "–¶–≤–µ—Ç –ø–æ–¥—Å–≤–µ—Ç–∫–∏", "–°–∫–æ—Ä–æ—Å—Ç—å –∏–Ω—Ç–µ—Ä–Ω–µ—Ç–∞"], "correct": 0},
]
PROFESSIONAL_TEST = [
    {"question": "–ü–æ—á–µ–º—É –≤–∞–∂–Ω–æ –ø—Ä–æ–¥—É–º—ã–≤–∞—Ç—å airflow?", "options": ["–î–ª—è —ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–æ–≥–æ –æ—Ö–ª–∞–∂–¥–µ–Ω–∏—è", "–î–ª—è –ø–æ–≤—ã—à–µ–Ω–∏—è FPS –±–µ–∑ –∫—É–ª–µ—Ä–æ–≤", "–ù–µ –≤–∞–∂–Ω–æ"], "correct": 0},
    {"question": "–ö–∞–∫ –∑–∞—â–∏—Ç–∏—Ç—å—Å—è –æ—Ç —Å—Ç–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ —Ä–∞–∑—Ä—è–¥–∞?", "options": ["–ê–Ω—Ç–∏—Å—Ç–∞—Ç–∏—á–µ—Å–∫–∏–º –±—Ä–∞—Å–ª–µ—Ç–æ–º", "–ó–∞–∫—Ä—ã—Ç—å –æ–∫–Ω–∞", "–ù–∞–¥–µ—Ç—å –ø–µ—Ä—á–∞—Ç–∫–∏"], "correct": 0},
    {"question": "–ß—Ç–æ –≤–∫–ª—é—á–∞–µ—Ç —Ä–∞–∑–±–æ—Ä –æ—à–∏–±–æ–∫ –ø–æ—Å–ª–µ —Ç–µ—Å—Ç–∞?", "options": ["–ê–Ω–∞–ª–∏–∑ –Ω–µ–≤–µ—Ä–Ω—ã—Ö –æ—Ç–≤–µ—Ç–æ–≤", "–¢–æ–ª—å–∫–æ –∏—Ç–æ–≥–æ–≤—ã–π –±–∞–ª–ª", "–°–∫–æ—Ä–æ—Å—Ç—å —Å–µ—Ç–∏"], "correct": 0},
]

async def start_test(update: Update, context: ContextTypes.DEFAULT_TYPE):
    query = update.callback_query or update
    chat_id = query.message.chat_id if hasattr(query, 'message') else update.effective_chat.id
    data = get_user_data(chat_id)
    course = data.get("edu_course", "")
    tests = {"basic": BASIC_TEST, "advanced": ADVANCED_TEST, "professional": PROFESSIONAL_TEST}
    data["test_questions"] = tests.get(course, [])
    data["test_index"] = 0
    data["test_correct"] = 0
    data["wrong_answers"] = []
    set_user_data(chat_id, data)
    await show_test_question(update, context)

async def show_test_question(update: Update, context: ContextTypes.DEFAULT_TYPE):
    query = update.callback_query
    await query.answer()
    chat_id = query.message.chat_id
    data = get_user_data(chat_id)
    qs = data.get("test_questions", [])
    idx = data.get("test_index", 0)
    if idx < len(qs):
        qd = qs[idx]
        text = f"<b>–í–æ–ø—Ä–æ—Å {idx+1}:</b> {qd['question']}\n\n"
        for i, opt in enumerate(qd["options"]):
            text += f"{i+1}) {opt}\n"
        buttons = [InlineKeyboardButton(str(i+1), callback_data=f"test_ans_{i}") for i in range(len(qd["options"]))]
        buttons.append(InlineKeyboardButton("üè† –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", callback_data="edu_home"))
        kb = InlineKeyboardMarkup([buttons])
        await send_stage_message(update, text, header="–¢–µ—Å—Ç", reply_markup=kb)
    else:
        await show_test_result(update, context)

async def test_answer(update: Update, context: ContextTypes.DEFAULT_TYPE):
    query = update.callback_query
    await query.answer()
    chat_id = query.message.chat_id
    data = get_user_data(chat_id)
    idx = data.get("test_index", 0)
    qs = data.get("test_questions", [])
    if idx < len(qs):
        sel = int(query.data.split("_")[-1])
        corr = qs[idx]["correct"]
        if sel == corr:
            data["test_correct"] += 1
        else:
            data["wrong_answers"].append({"index": idx, "selected": sel, "correct": corr})
        data["test_index"] += 1
        set_user_data(chat_id, data)
        await show_test_question(update, context)
    else:
        await show_test_result(update, context)

async def show_test_result(update: Update, context: ContextTypes.DEFAULT_TYPE):
    query = update.callback_query
    await query.answer()
    chat_id = query.message.chat_id
    data = get_user_data(chat_id)
    total = len(data.get("test_questions", []))
    correct = data.get("test_correct", 0)
    text = f"<b>–†–µ–∑—É–ª—å—Ç–∞—Ç—ã —Ç–µ—Å—Ç–∞:</b>\n–ü—Ä–∞–≤–∏–ª—å–Ω–æ: {correct} –∏–∑ {total}.\n\n"
    wrongs = data.get("wrong_answers", [])
    if wrongs:
        text += "<b>–†–∞–∑–±–æ—Ä –æ—à–∏–±–æ–∫:</b>\n"
        for w in wrongs:
            qd = data["test_questions"][w["index"]]
            sel = qd["options"][w["selected"]]
            corr = qd["options"][w["correct"]]
            text += f"–í–æ–ø—Ä–æ—Å {w['index']+1}: –≤—ã –≤—ã–±—Ä–∞–ª–∏ ¬´{sel}¬ª, –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π –æ—Ç–≤–µ—Ç ‚Äî ¬´{corr}¬ª.\n"
    kb = InlineKeyboardMarkup([
        [InlineKeyboardButton("–ü—Ä–æ–π—Ç–∏ —Ç–µ—Å—Ç —Å–Ω–æ–≤–∞", callback_data="test_start")],
        [InlineKeyboardButton("üè† –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", callback_data="edu_home")]
    ])
    await send_stage_message(update, text, header="–¢–µ—Å—Ç", reply_markup=kb)

async def test_start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    await start_test(update, context)

# ‚îÄ‚îÄ‚îÄ –†–ï–ì–ò–°–¢–†–ê–¶–ò–Ø –û–ë–†–ê–ë–û–¢–ß–ò–ö–û–í ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ

def setup_handlers(app):
    app.add_handler(CommandHandler("educational_mode", start_educational_mode))
    app.add_handler(CallbackQueryHandler(start_educational_mode,      pattern="^educational_mode$"))
    app.add_handler(CallbackQueryHandler(basic_course_summary,       pattern="^basic_course$"))
    app.add_handler(CallbackQueryHandler(advanced_course_summary,    pattern="^advanced_course$"))
    app.add_handler(CallbackQueryHandler(professional_course_summary,pattern="^professional_course$"))
    app.add_handler(CallbackQueryHandler(basic_start,                pattern="^basic_start$"))
    app.add_handler(CallbackQueryHandler(advanced_start,             pattern="^advanced_start$"))
    app.add_handler(CallbackQueryHandler(professional_start,         pattern="^professional_start$"))
    app.add_handler(CallbackQueryHandler(course_next,                pattern="^course_next$"))
    app.add_handler(CallbackQueryHandler(course_prev,                pattern="^course_prev$"))
    app.add_handler(CallbackQueryHandler(course_finish,              pattern="^course_finish$"))
    app.add_handler(CallbackQueryHandler(start_educational_mode,     pattern="^edu_back$"))
    app.add_handler(CallbackQueryHandler(edu_go_home,                pattern="^edu_home$"))
    app.add_handler(CallbackQueryHandler(test_start,                 pattern="^test_start$"))
    app.add_handler(CallbackQueryHandler(test_answer,                pattern="^test_ans_"))
    # –æ–∫