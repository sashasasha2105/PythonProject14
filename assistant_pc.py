# -*- coding: utf-8 -*-
"""
assistant_pc.py ‚Äî –ê—Å—Å–∏—Å—Ç–µ–Ω—Ç —Å–±–æ—Ä–∫–∏ –ü–ö (—Ä–∞—Å—à–∏—Ä–µ–Ω–Ω–∞—è –≤–µ—Ä—Å–∏—è).
–î–∞—Ç–∞: 20 –∞–ø—Ä 2025
"""

from pathlib import Path
from telegram import InlineKeyboardButton, InlineKeyboardMarkup, Update
from telegram.ext import CallbackQueryHandler, ContextTypes
from data import (
    steps, cooling_instructions, ram_instructions,
    fan_instructions, power_supply_instructions,
    gpu_instructions, wires_instructions
)
from utils import get_user_data, set_user_data

# ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ
# 1 ‚ñ∏ –¢–µ–∫—Å—Ç—ã —à–∞–≥–æ–≤
# ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ
PREPARATION_FULL = """
<b>üîß –ü–æ–¥–≥–æ—Ç–æ–≤–∫–∞ —Ä–∞–±–æ—á–µ–≥–æ –º–µ—Å—Ç–∞</b>

1Ô∏è‚É£ <b>–°—Ç–æ–ª</b> ‚Äî —Ä–æ–≤–Ω–∞—è –ø–æ–≤–µ—Ä—Ö–Ω–æ—Å—Ç—å –º–∏–Ω–∏–º—É–º 80√ó60¬†—Å–º.  
2Ô∏è‚É£ <b>–ê–Ω—Ç–∏—Å—Ç–∞—Ç–∏–∫–∞</b> ‚Äî –±—Ä–∞—Å–ª–µ—Ç + –∫–ª–∏–ø—Å–∞ –∫ –∫–æ—Ä–ø—É—Å—É –ë–ü –∏–ª–∏ –∫–∞—Å–∞–π—Ç–µ—Å—å –º–µ—Ç–∞–ª–ª–∞ –∫–∞–∂–¥—ã–µ 2¬†–º–∏–Ω.  
3Ô∏è‚É£ <b>–ò–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã</b> ‚Äî PH2, PH1, –ø–ª–æ—Å–∫–æ–≥—É–±—Ü—ã, –ø–∏–Ω—Ü–µ—Ç, –±–æ–∫–æ—Ä–µ–∑—ã, —Å—Ç—è–∂–∫–∏, —Ç–µ—Ä–º–æ–ø–∞—Å—Ç–∞, —Å–∞–ª—Ñ–µ—Ç–∫–∏.  
4Ô∏è‚É£ <b>–†–∞—Å–∫–ª–∞–¥–∫–∞</b> ‚Äî –∫–æ—Ä–ø—É—Å –±–µ–∑ –ø–∞–Ω–µ–ª–µ–π, –º–∞—Ç–ø–ª–∞—Ç–∞ –Ω–∞ –∫–æ—Ä–æ–±–∫–µ, –∫–æ–º–ø–ª–µ–∫—Ç—É—é—â–∏–µ —Ä—è–¥–æ–º.  
5Ô∏è‚É£ <b>–û—Å–≤–µ—â–µ–Ω–∏–µ</b> ‚Äî —è—Ä–∫–∞—è –ª–∞–º–ø–∞, 20‚Äì26¬†¬∞C, –±–µ–∑ —Å–∫–≤–æ–∑–Ω—è–∫–æ–≤ –∏ –ø—ã–ª–∏.
""".strip()

# CPU
steps["Intel"]["instructions"][0] = """
<b>‚öôÔ∏è –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –ø—Ä–æ—Ü–µ—Å—Å–æ—Ä–∞ Intel (LGA‚Äë—Å–æ–∫–µ—Ç)</b>

1Ô∏è‚É£ –û—Ç–∫—Ä–æ–π—Ç–µ —Ä—ã—á–∞–≥ –∏ –ø–æ–¥–Ω–∏–º–∏—Ç–µ —Ä–∞–º–∫—É —Å–æ–∫–µ—Ç–∞.  
2Ô∏è‚É£ –°–æ–≤–º–µ—Å—Ç–∏—Ç–µ –∑–æ–ª–æ—Ç–æ–π —Ç—Ä–µ—É–≥–æ–ª—å–Ω–∏–∫ –Ω–∞ CPU —Å –º–µ—Ç–∫–æ–π –Ω–∞ —Å–æ–∫–µ—Ç–µ.  
3Ô∏è‚É£ –û–ø—É—Å—Ç–∏—Ç–µ –ø—Ä–æ—Ü–µ—Å—Å–æ—Ä —Å—Ç—Ä–æ–≥–æ –≤–µ—Ä—Ç–∏–∫–∞–ª—å–Ω–æ, –Ω–µ –¥–∞–≤–∏—Ç–µ.  
4Ô∏è‚É£ –ó–∞–∫—Ä–æ–π—Ç–µ —Ä–∞–º–∫—É –∏ –æ–ø—É—Å—Ç–∏—Ç–µ —Ä—ã—á–∞–≥ –¥–æ —â–µ–ª—á–∫–∞.  
5Ô∏è‚É£ –ü—Ä–æ–≤–µ—Ä—å—Ç–µ, —á—Ç–æ CPU –Ω–µ —à–∞—Ç–∞–µ—Ç—Å—è.

‚ö†Ô∏è –ù–µ –∫–∞—Å–∞–π—Ç–µ—Å—å –∫–æ–Ω—Ç–∞–∫—Ç–Ω—ã—Ö –ø–ª–æ—â–∞–¥–µ–∫ –ø–∞–ª—å—Ü–∞–º–∏!  
<a href="https://rutube.ru/video/1c42d5692ee827b3c815e963bc1dcac0/">–í–∏–¥–µ–æ Intel</a>
""".strip()

steps["AMD"]["instructions"][0] = """
<b>‚öôÔ∏è –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –ø—Ä–æ—Ü–µ—Å—Å–æ—Ä–∞ AMD (AM4/AM5)</b>

<b>AM4 (PGA)</b>  
1Ô∏è‚É£ –ü–æ–¥–Ω–∏–º–∏—Ç–µ —Ä—ã—á–∞–≥ –Ω–∞¬†90¬∞.  
2Ô∏è‚É£ –°–æ–≤–º–µ—Å—Ç–∏—Ç–µ —Ç—Ä–µ—É–≥–æ–ª—å–Ω–∏–∫ CPU —Å¬†–º–µ—Ç–∫–æ–π —Å–æ–∫–µ—Ç–∞.  
3Ô∏è‚É£ –û–ø—É—Å—Ç–∏—Ç–µ CPU, –∑–∞—Ç–µ–º –æ–ø—É—Å—Ç–∏—Ç–µ —Ä—ã—á–∞–≥.

<b>AM5 (LGA)</b>  
1Ô∏è‚É£ –û—Ç–∫—Ä–æ–π—Ç–µ —Ä–∞–º–∫—É, –ø—Ä–∏–ø–æ–¥–Ω—è–≤ —Ñ–∏–∫—Å–∞—Ç–æ—Ä.  
2Ô∏è‚É£ –°–æ–≤–º–µ—Å—Ç–∏—Ç–µ –Ω–∞–ø—Ä–∞–≤–ª—è—é—â–∏–µ CPU –∏¬†—Å–æ–∫–µ—Ç–∞.  
3Ô∏è‚É£ –û–ø—É—Å—Ç–∏—Ç–µ CPU —Å—Ç—Ä–æ–≥–æ –≤–µ—Ä—Ç–∏–∫–∞–ª—å–Ω–æ.  
4Ô∏è‚É£ –ó–∞–∫—Ä–æ–π—Ç–µ —Ä–∞–º–∫—É –¥–æ¬†—â–µ–ª—á–∫–∞.

‚ö†Ô∏è –ù–µ —Å–≥–∏–±–∞–π—Ç–µ –Ω–æ–∂–∫–∏ –∏¬†–Ω–µ –∫–∞—Å–∞–π—Ç–µ—Å—å –ø–ª–æ—â–∞–¥–æ–∫!  
<a href="https://rutube.ru/video/cf6d5d2cfbe19149fde57551e8e53022/">–í–∏–¥–µ–æ AMD</a>
""".strip()

# RAM
ram_instructions.update({
    "1": """
<b>üíæ –£—Å—Ç–∞–Ω–æ–≤–∫–∞ 1 –ø–ª–∞–Ω–∫–∏ –û–ó–£</b>

1Ô∏è‚É£ –û—Ç–∫—Ä–æ–π—Ç–µ –∑–∞—â–µ–ª–∫–∏ —Å–ª–æ—Ç–∞ A2.  
2Ô∏è‚É£ –°–æ–≤–º–µ—Å—Ç–∏—Ç–µ –≤—ã—Ä–µ–∑ –º–æ–¥—É–ª—è –∏ –ø–∞–∑ —Å–ª–æ—Ç–∞.  
3Ô∏è‚É£ –ù–∞–∂–º–∏—Ç–µ –¥–æ —â–µ–ª—á–∫–∞, –∑–∞—â–µ–ª–∫–∏ –∑–∞–∫—Ä–æ—é—Ç—Å—è.  
4Ô∏è‚É£ –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –≤—ã—Ä–∞–≤–Ω–∏–≤–∞–Ω–∏–µ.
""".strip(),
    "2": """
<b>üíæ –£—Å—Ç–∞–Ω–æ–≤–∫–∞ 2 –ø–ª–∞–Ω–æ–∫ (–¥–≤—É—Ö–∫–∞–Ω–∞–ª)</b>

1Ô∏è‚É£ –û—Ç–∫—Ä–æ–π—Ç–µ –∑–∞—â–µ–ª–∫–∏ A2 –∏ B2.  
2Ô∏è‚É£ –í—Å—Ç–∞–≤—å—Ç–µ –æ–±–∞ –º–æ–¥—É–ª—è, –Ω–∞–∂–º–∏—Ç–µ –¥–æ —â–µ–ª—á–∫–æ–≤.  
3Ô∏è‚É£ –£–±–µ–¥–∏—Ç–µ—Å—å –≤ —Ä–∞–≤–Ω–æ–º –ø–æ–ª–æ–∂–µ–Ω–∏–∏.
""".strip(),
    "4": """
<b>üíæ –£—Å—Ç–∞–Ω–æ–≤–∫–∞ 4 –ø–ª–∞–Ω–æ–∫ (—á–µ—Ç—ã—Ä—ë—Ö–∫–∞–Ω–∞–ª)</b>

1Ô∏è‚É£ –û—Ç–∫—Ä–æ–π—Ç–µ –≤—Å–µ –∑–∞—â–µ–ª–∫–∏.  
2Ô∏è‚É£ –í—Å—Ç–∞–≤—å—Ç–µ A1‚ÜíB1‚ÜíA2‚ÜíB2.  
3Ô∏è‚É£ –ù–∞–∂–º–∏—Ç–µ –¥–æ —â–µ–ª—á–∫–æ–≤, –ø—Ä–æ–≤–µ—Ä—å—Ç–µ –≤—ã—Ä–∞–≤–Ω–∏–≤–∞–Ω–∏–µ.
""".strip(),
})

# M.2
M2_DETAILED = """
<b>üóúÔ∏è –£—Å—Ç–∞–Ω–æ–≤–∫–∞ M.2 SSD</b>

1Ô∏è‚É£ –û—Ç–≤–µ—Ä–Ω–∏—Ç–µ –≤–∏–Ω—Ç–∏–∫‚Äë—Ñ–∏–∫—Å–∞—Ç–æ—Ä –∏ –ø–æ–ª–æ–∂–∏—Ç–µ —Ä—è–¥–æ–º.  
2Ô∏è‚É£ –í—Å—Ç–∞–≤—å—Ç–µ SSD –ø–æ–¥ —É–≥–ª–æ–º ~30¬∞ –¥–æ —É–ø–æ—Ä–∞.  
3Ô∏è‚É£ –û–ø—É—Å—Ç–∏—Ç–µ –≥–æ—Ä–∏–∑–æ–Ω—Ç–∞–ª—å–Ω–æ, —Å–æ–≤–º–µ—Å—Ç–∏—Ç–µ –æ—Ç–≤–µ—Ä—Å—Ç–∏–µ.  
4Ô∏è‚É£ –ó–∞–∫—Ä—É—Ç–∏—Ç–µ –≤–∏–Ω—Ç –ø–∞–ª—å—Ü–∞–º–∏ ‚Äî –Ω–µ –ø–µ—Ä–µ—Ç—è–≥–∏–≤–∞–π—Ç–µ.  
5Ô∏è‚É£ –ü—Ä–∏ –Ω–∞–ª–∏—á–∏–∏ —Ä–∞–¥–∏–∞—Ç–æ—Ä–∞ —É—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ –µ–≥–æ –ø–æ–≤–µ—Ä—Ö SSD.  
<a href="https://rutube.ru/video/fa86b5395ed102e415eb00d8a3b2f9fd/">–í–∏–¥–µ–æ M.2</a>
""".strip()

# Cooling
cooling_instructions["Intel"]["air"] = """
<b>üåÄ –í–æ–∑–¥—É—à–Ω—ã–π –∫—É–ª–µ—Ä Intel (–±–∞—à–Ω—è)</b>

1Ô∏è‚É£ –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ back‚Äëplate –∑–∞ –ø–ª–∞—Ç–æ–π.  
2Ô∏è‚É£ –í–≤–µ—Ä–Ω–∏—Ç–µ —Å—Ç–æ–π–∫–∏, –ø—Ä–∏–∫—Ä—É—Ç–∏—Ç–µ —Ä–∞–º–∫—É.  
3Ô∏è‚É£ –ù–∞–¥–µ–Ω—å—Ç–µ —Ä–∞–¥–∏–∞—Ç–æ—Ä, –∑–∞–∫—Ä–µ–ø–∏—Ç–µ –∫—Ä–µ—Å—Ç‚Äë–Ω–∞–∫—Ä–µ—Å—Ç.  
4Ô∏è‚É£ –ü—Ä–∏–∫—Ä—É—Ç–∏—Ç–µ –≤–µ–Ω—Ç–∏–ª—è—Ç–æ—Ä —Å—Ç—Ä–µ–ª–æ–π –∫ –∑–∞–¥–Ω–µ–π –ø–∞–Ω–µ–ª–∏.  
5Ô∏è‚É£ –ü–æ–¥–∫–ª—é—á–∏—Ç–µ 4‚Äëpin –∫ <code>CPU_FAN</code>.  
<a href="https://yandex.ru/video/preview/15387608359965564597">–í–∏–¥–µ–æ Intel air</a>
""".strip()

cooling_instructions["Intel"]["water"] = """
<b>üíß AIO Intel</b>

1Ô∏è‚É£ –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ back‚Äëplate –∏ —Å—Ç–æ–π–∫–∏.  
2Ô∏è‚É£ –°–Ω–∏–º–∏—Ç–µ –ø–ª—ë–Ω–∫—É —Å –≤–æ–¥–æ–±–ª–æ–∫–∞.  
3Ô∏è‚É£ –ù–∞–¥–∞–≤–∏—Ç–µ, –∑–∞–∫—Ä—É—Ç–∏—Ç–µ –∫—Ä–µ—Å—Ç‚Äë–Ω–∞–∫—Ä–µ—Å—Ç.  
4Ô∏è‚É£ –ü—Ä–∏–∫—Ä—É—Ç–∏—Ç–µ –≤–µ–Ω—Ç–∏–ª—è—Ç–æ—Ä—ã —Å—Ç—Ä–µ–ª–∫–∞–º–∏ –Ω–∞—Ä—É–∂—É.  
5Ô∏è‚É£ –ü–æ–¥–∫–ª—é—á–∏—Ç–µ Pump‚Üí<code>PUMP_FAN</code>, Fans‚Üí<code>SYS_FAN</code>.  
<a href="https://yandex.ru/video/preview/8565882692027585885">–í–∏–¥–µ–æ Intel water</a>
""".strip()

cooling_instructions["AMD"]["air"] = """
<b>üåÄ –í–æ–∑–¥—É—à–Ω—ã–π –∫—É–ª–µ—Ä AMD (AM4/AM5)</b>

1Ô∏è‚É£ –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ –ª–∞–ø—ã –∫—É–ª–µ—Ä–∞ –Ω–∞ —Å—Ç–æ–π–∫–∏.  
2Ô∏è‚É£ –ù–∞–¥–µ–Ω—å—Ç–µ —Ä–∞–¥–∏–∞—Ç–æ—Ä –≤–µ—Ä—Ç–∏–∫–∞–ª—å–Ω–æ.  
3Ô∏è‚É£ –ó–∞–∫—Ä—É—Ç–∏—Ç–µ –ø—Ä—É–∂–∏–Ω–Ω—ã–µ –≤–∏–Ω—Ç—ã –ø–æ –¥–∏–∞–≥–æ–Ω–∞–ª–∏.  
4Ô∏è‚É£ –ü—Ä–∏–∫—Ä—É—Ç–∏—Ç–µ –≤–µ–Ω—Ç–∏–ª—è—Ç–æ—Ä —Å—Ç—Ä–µ–ª–∫–æ–π –Ω–∞—Ä—É–∂—É.  
5Ô∏è‚É£ –ü–æ–¥–∫–ª—é—á–∏—Ç–µ –∫ <code>CPU_FAN</code>.  
<a href="https://rutube.ru/video/2d0be3979a44d55577b5ec1ac4902b36/">–í–∏–¥–µ–æ AMD air</a>
""".strip()

cooling_instructions["AMD"]["water"] = """
<b>üíß AIO AMD</b>

1Ô∏è‚É£ –í–∫—Ä—É—Ç–∏—Ç–µ —Å—Ç–æ–π–∫–∏ –≤ —à—Ç–∞—Ç–Ω—ã–π back‚Äëplate.  
2Ô∏è‚É£ –°–Ω–∏–º–∏—Ç–µ –ø–ª—ë–Ω–∫—É, —É—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ –±–ª–æ–∫.  
3Ô∏è‚É£ –ó–∞–∫—Ä—É—Ç–∏—Ç–µ –∫—Ä–µ—Å—Ç‚Äë–Ω–∞–∫—Ä–µ—Å—Ç.  
4Ô∏è‚É£ –ü–æ–¥–∫–ª—é—á–∏—Ç–µ Fans‚Üí<code>SYS_FAN</code>, Pump‚Üí<code>PUMP_FAN</code>.  
5Ô∏è‚É£ ARGB/RGB ‚Üí —Ö–µ–¥–µ—Ä—ã.  
<a href="https://www.youtube.com/watch?v=yjCPn3IZRJQ">–í–∏–¥–µ–æ AMD water</a>
""".strip()

# Fans
fan_instructions.clear()
fan_instructions.update({
    "aquarium": """
<b>üåÄ –ê–∫–≤–∞—Ä–∏—É–º–Ω—ã–π –∫–æ—Ä–ø—É—Å</b>

1Ô∏è‚É£ –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –æ—Ç–≤–µ—Ä—Å—Ç–∏—è –ø–æ–¥ 120/140¬†–º–º.  
2Ô∏è‚É£ –ù–∏–∑ (–≤–¥—É–≤): 3√ó120, —Å—Ç—Ä–µ–ª–∫–∞ –≤–≤–µ—Ä—Ö.  
3Ô∏è‚É£ –ë–æ–∫ (–≤–¥—É–≤): 2‚Äì3√ó120, —Å—Ç—Ä–µ–ª–∫–∞ –≤–Ω—É—Ç—Ä—å.  
4Ô∏è‚É£ –í–µ—Ä—Ö (–≤—ã–¥—É–≤): 3√ó140, —Å—Ç—Ä–µ–ª–∫–∞ –Ω–∞—Ä—É–∂—É.  
5Ô∏è‚É£ –ó–∞–¥ (–≤—ã–¥—É–≤): 1√ó120, —Å—Ç—Ä–µ–ª–∫–∞ –Ω–∞–ø—Ä–∞–≤–æ.  
6Ô∏è‚É£ –ü–æ–¥–∫–ª—é—á–∏—Ç–µ:
   ‚Ä¢ <code>CPU_FAN</code> ‚Üí –∫—É–ª–µ—Ä  
   ‚Ä¢ –ù–∏–∂–Ω–∏–µ/–±–æ–∫–æ–≤—ã–µ ‚Üí HUB ‚Üí <code>SYS_FAN1/2</code>  
   ‚Ä¢ –í–µ—Ä—Ö–Ω–∏–µ/–∑–∞–¥–Ω–∏–µ ‚Üí <code>SYS_FAN3/4</code>  
7Ô∏è‚É£ ARGB: D‚ÄëOut‚ÜíD‚ÄëIn‚Üí<code>ARGB_HEADER</code>.  
8Ô∏è‚É£ –ö–∞–±–µ–ª–∏ —Å—Ç—è–∂–∫–∞–º–∏ –∑–∞ –ª–æ—Ç–∫–æ–º.
""".strip(),
    "classic_bottom": """
<b>üåÄ –ö–ª–∞—Å—Å–∏—á–µ—Å–∫–∏–π –∫–æ—Ä–ø—É—Å (–ë–ü –≤–Ω–∏–∑—É)</b>

1Ô∏è‚É£ –ü–µ—Ä–µ–¥ (–≤–¥—É–≤): 2‚Äì3√ó140, —Å—Ç—Ä–µ–ª–∫–∞ –≤–Ω—É—Ç—Ä—å.  
2Ô∏è‚É£ –í–µ—Ä—Ö (–≤—ã–¥—É–≤): 2√ó120, —Å—Ç—Ä–µ–ª–∫–∞ –Ω–∞—Ä—É–∂—É.  
3Ô∏è‚É£ –ó–∞–¥ (–≤—ã–¥—É–≤): 1√ó120.  
4Ô∏è‚É£ –ü–æ–¥–∫–ª—é—á–∏—Ç–µ:
   ‚Ä¢ –ü–µ—Ä–µ–¥–Ω–∏–µ ‚Üí HUB (SATA) ‚Üí <code>SYS_FAN1</code>  
   ‚Ä¢ –í–µ—Ä—Ö–Ω–∏–µ ‚Üí Y‚Äë–∫–∞–±–µ–ª—å ‚Üí <code>SYS_FAN2</code>  
   ‚Ä¢ –ó–∞–¥–Ω–∏–π ‚Üí <code>SYS_FAN3</code>  
5Ô∏è‚É£ ARGB ‚Üí <code>ARGB_HEADER</code> + SATA.  
6Ô∏è‚É£ –ö–∞–±–µ–ª–∏ —Å—Ç—è–∂–∫–∞–º–∏ –∑–∞ –ª–æ—Ç–∫–æ–º.
""".strip(),
    "classic_top": """
<b>üåÄ –ö–ª–∞—Å—Å–∏—á–µ—Å–∫–∏–π –∫–æ—Ä–ø—É—Å (–ë–ü —Å–≤–µ—Ä—Ö—É)</b>

1Ô∏è‚É£ –ü–µ—Ä–µ–¥ (–≤–¥—É–≤): 2√ó120, —Å—Ç—Ä–µ–ª–∫–∞ –≤–Ω—É—Ç—Ä—å.  
2Ô∏è‚É£ –ó–∞–¥ (–≤—ã–¥—É–≤): 1√ó120, —Å—Ç—Ä–µ–ª–∫–∞ –Ω–∞—Ä—É–∂—É.  
3Ô∏è‚É£ –ü–µ—Ä–µ–¥–Ω–∏–µ ‚Üí Y‚Äë–∫–∞–±–µ–ª—å ‚Üí <code>SYS_FAN1/2</code>  
4Ô∏è‚É£ –ó–∞–¥–Ω–∏–π ‚Üí <code>SYS_FAN3</code>  
5Ô∏è‚É£ ARGB ‚Üí D‚ÄëOut‚ÜíD‚ÄëIn‚Üí<code>ARGB_HEADER</code>.  
6Ô∏è‚É£ –ö–∞–±–µ–ª–∏ –ø–æ–¥ –∫–æ–∂—É—Ö–æ–º.
""".strip(),
    "already_installed": """
<b>üåÄ –í–µ–Ω—Ç–∏–ª—è—Ç–æ—Ä—ã —É–∂–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã</b>

1Ô∏è‚É£ –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Å—Ç—Ä–µ–ª–æ–∫.  
2Ô∏è‚É£ –ü–æ–¥–∫–ª—é—á–∏—Ç–µ:
   ‚Ä¢ <code>CPU_FAN</code> ‚Üí –∫—É–ª–µ—Ä  
   ‚Ä¢ <code>SYS_FAN</code> ‚Üí –∫–æ—Ä–ø—É—Å  
3Ô∏è‚É£ ARGB 3‚Äëpin ‚Üí <code>ARGB_HEADER</code>, RGB 4‚Äëpin ‚Üí –∫–æ–Ω—Ç—Ä–æ–ª–ª–µ—Ä.  
4Ô∏è‚É£ –ö–∞–±–µ–ª–∏ —Å—Ç—è–∂–∫–∞–º–∏.
""".strip(),
})

# PSU
power_supply_instructions = """
<b>üîå –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –±–ª–æ–∫–∞ –ø–∏—Ç–∞–Ω–∏—è (ATX)</b>

1Ô∏è‚É£ –û—Ç–∫–ª—é—á–∏—Ç–µ –ø–∏—Ç–∞–Ω–∏–µ –∏ –≤—ã–Ω—å—Ç–µ –∫–∞–±–µ–ª—å.  
2Ô∏è‚É£ –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ –≤–µ–Ω—Ç–∏–ª—è—Ç–æ—Ä–æ–º –≤–Ω–∏–∑ –∏–ª–∏ –∫ —Ñ–∏–ª—å—Ç—Ä—É.  
3Ô∏è‚É£ –ó–∞–∫—Ä—É—Ç–∏—Ç–µ 4 –≤–∏–Ω—Ç–∞ –∫—Ä–µ—Å—Ç‚Äë–Ω–∞–∫—Ä–µ—Å—Ç.  
4Ô∏è‚É£ –ü–æ–¥–∫–ª—é—á–∏—Ç–µ:
   ‚Ä¢ ATX 24‚Äëpin ‚Üí –º–∞—Ç–ø–ª–∞—Ç–∞  
   ‚Ä¢ EPS 8‚Äëpin ‚Üí CPU  
   ‚Ä¢ PCI‚ÄëE/12VHPWR ‚Üí GPU  
   ‚Ä¢ SATA Power ‚Üí –Ω–∞–∫–æ–ø–∏—Ç–µ–ª–∏ –∏ —Ö–∞–±—ã  
   ‚Ä¢ Molex ‚Üí —Å—Ç–∞—Ä—ã–µ —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞  
5Ô∏è‚É£ –ö–∞–±–µ–ª–∏ —Å—Ç—è–∂–∫–∞–º–∏ –∑–∞ –ª–æ—Ç–∫–æ–º.  
6Ô∏è‚É£ –ü–æ–¥–∫–ª—é—á–∏—Ç–µ –∫–∞–±–µ–ª—å, –≤–∫–ª—é—á–∏—Ç–µ —Ç—É–º–±–ª–µ—Ä ¬´1¬ª.  
<a href="https://rutube.ru/video/98be6d9b389beee69b686336528481ea/">–í–∏–¥–µ–æ PSU</a>
""".strip()

# GPU
gpu_instructions = """
<b>üéÆ –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –≤–∏–¥–µ–æ–∫–∞—Ä—Ç—ã</b>

1Ô∏è‚É£ –°–Ω–∏–º–∏—Ç–µ –∑–∞–≥–ª—É—à–∫–∏ PCI‚ÄëE.  
2Ô∏è‚É£ –û—Ç–æ–∂–º–∏—Ç–µ –∑–∞—â–µ–ª–∫—É —Å–ª–æ—Ç–∞.  
3Ô∏è‚É£ –í—Å—Ç–∞–≤—å—Ç–µ –∫–∞—Ä—Ç—É —Ä–æ–≤–Ω–æ ‚Äî —â–µ–ª—á–æ–∫.  
4Ô∏è‚É£ –ó–∞–∫—Ä—É—Ç–∏—Ç–µ –≤–∏–Ω—Ç—ã.  
5Ô∏è‚É£ –ü–æ–¥–∫–ª—é—á–∏—Ç–µ –ø–∏—Ç–∞–Ω–∏–µ 6/8‚Äëpin –∏–ª–∏ 12VHPWR.  
6Ô∏è‚É£ –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ –ø–æ–¥–ø–æ—Ä–∫—É –ø—Ä–∏ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç–∏.  
7Ô∏è‚É£ –ö–∞–±–µ–ª–∏ –Ω–µ –º–µ—à–∞—é—Ç –ª–æ–ø–∞—Å—Ç—è–º.
""".strip()

# Wires
wires_instructions = f"""
<b>üîó –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫–∞–±–µ–ª–µ–π</b>

1Ô∏è‚É£ ATX 24‚Äëpin ‚Üí –ø—Ä–∞–≤—ã–π –∫—Ä–∞–π –º–∞—Ç–ø–ª–∞—Ç—ã.  
2Ô∏è‚É£ EPS 8‚Äëpin ‚Üí –≤–µ—Ä—Ö–Ω–∏–π –∫—Ä–∞–π.  
3Ô∏è‚É£ PCI‚ÄëE/12VHPWR ‚Üí GPU.  
4Ô∏è‚É£ SATA Power ‚Üí SSD/HDD, —Ö–∞–±—ã.  
5Ô∏è‚É£ SATA Data ‚Üí –ø–æ—Ä—Ç –Ω–∞ –ø–ª–∞—Ç–µ.

6Ô∏è‚É£ –§—Ä–æ–Ω—Ç‚Äë–ø–∞–Ω–µ–ª—å PANEL1 (IMG_5330.jpg):
   ‚Ä¢ 1Ô∏è‚É£ HDD_LED+ ‚Üí HDD+
   ‚Ä¢ 3Ô∏è‚É£ HDD_LED‚Äë ‚Üí HDD‚Äë
   ‚Ä¢ 2Ô∏è‚É£ PLED+ ‚Üí PLED+
   ‚Ä¢ 4Ô∏è‚É£ PLED‚Äë ‚Üí PLED‚Äë
   ‚Ä¢ 5Ô∏è‚É£ RESET‚Äë ‚Üí RES‚Äë
   ‚Ä¢ 7Ô∏è‚É£ RESET+ ‚Üí RES+
   ‚Ä¢ 6Ô∏è‚É£ POWER+ ‚Üí PW+
   ‚Ä¢ 8Ô∏è‚É£ POWER‚Äë ‚Üí PW‚Äë
   ‚Ä¢ 9Ô∏è‚É£ KEY ‚Üí –ø—É—Å—Ç–æ

üîü –í–µ–Ω—Ç–∏–ª—è—Ç–æ—Ä—ã: CPU_FAN, SYS_FAN1/2/3, PUMP_FAN  
1Ô∏è‚É£1Ô∏è‚É£ ARGB / RGB (—Å–º. –≤—ã—à–µ)  
1Ô∏è‚É£2Ô∏è‚É£ –ö–∞–±–µ–ª–∏ —Å—Ç—è–∂–∫–∞–º–∏ –∑–∞ –ª–æ—Ç–∫–æ–º.
""".strip()

# OS
WIN_TEXT = """
<b>üñ•Ô∏è –£—Å—Ç–∞–Ω–æ–≤–∫–∞ Windows 10/11</b>

1Ô∏è‚É£ –°–∫–∞—á–∞–π—Ç–µ Media Creation Tool.  
2Ô∏è‚É£ –°–æ–∑–¥–∞–π—Ç–µ UEFI‚ÄëGPT —Ñ–ª–µ—à–∫—É (8¬†–ì–ë+).  
3Ô∏è‚É£ –í BIOS –≤–∫–ª—é—á–∏—Ç–µ AHCI, –æ—Ç–∫–ª—é—á–∏—Ç–µ Secure Boot.  
4Ô∏è‚É£ –ó–∞–≥—Ä—É–∑–∏—Ç–µ—Å—å —Å —Ñ–ª–µ—à–∫–∏ (F11/F12/Esc).  
5Ô∏è‚É£ –†–∞–∑–¥–µ–ª—ã: EFI, MSR, NTFS.  
6Ô∏è‚É£ –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ –¥—Ä–∞–π–≤–µ—Ä—ã –∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è.
""".strip()

LINUX_TEXT = """
<b>üêß –£—Å—Ç–∞–Ω–æ–≤–∫–∞ Ubuntu 22.04 LTS</b>

1Ô∏è‚É£ –°–∫–∞—á–∞–π—Ç–µ ISO, –ø—Ä–æ–≤–µ—Ä—å—Ç–µ SHA256.  
2Ô∏è‚É£ Rufus (DD) –∏–ª–∏ Etcher, UEFI‚ÄëGPT.  
3Ô∏è‚É£ BIOS: AHCI on, Secure Boot off.  
4Ô∏è‚É£ –ó–∞–≥—Ä—É–∑–∏—Ç–µ—Å—å ‚Üí Install Ubuntu.  
5Ô∏è‚É£ –†–∞–∑–º–µ—Ç—å—Ç–µ GPT: EFI, swap, ext4.  
6Ô∏è‚É£ <code>sudo ubuntu-drivers autoinstall</code>.  
7Ô∏è‚É£ <code>sudo apt update && sudo apt upgrade -y</code>.
""".strip()

MAC_TEXT = """
<b>üçé –£—Å—Ç–∞–Ω–æ–≤–∫–∞ macOS (Hackintosh/OpenCore)</b>

1Ô∏è‚É£ –°–æ–∑–¥–∞–π—Ç–µ —Ñ–ª–µ—à–∫—É —á–µ—Ä–µ–∑ GibMacOS.  
2Ô∏è‚É£ BIOS: AHCI=Enabled, XHCI Hand‚ÄëOff=Enabled, Secure Boot=Disabled, VT-d=Disabled.  
3Ô∏è‚É£ –ó–∞–≥—Ä—É–∑–∏—Ç–µ—Å—å ‚Üí Install macOS.  
4Ô∏è‚É£ –§–æ—Ä–º–∞—Ç APFS/GUID.  
5Ô∏è‚É£ –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ OC –Ω–∞ SSD, —Å–∫–æ–ø–∏—Ä—É–π—Ç–µ EFI.  
6Ô∏è‚É£ Kexts: Lilu, VirtualSMC, WhateverGreen, AppleALC.  
7Ô∏è‚É£ –ù–∞—Å—Ç—Ä–æ–π—Ç–µ config.plist.  
8Ô∏è‚É£ –ü–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∏—Ç–µ—Å—å –±–µ–∑ —Ñ–ª–µ—à–∫–∏.
""".strip()

# ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ
# 2 ‚ñ∏ –ü—Ä–æ–≥—Ä–µ—Å—Å –∏ —É—Ç–∏–ª–∏—Ç—ã
# ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ
TOTAL_STEPS = 8

def get_progress_text(p, total=TOTAL_STEPS):
    p = max(0, min(p, total))
    pct = round(p * 100 / total)
    bar = 'üü¢' * p + '‚ö™' * (total - p)
    return f"–ü—Ä–æ–≥—Ä–µ—Å—Å: [{bar}] {pct}%"

def increment_progress(cid):
    d = get_user_data(cid)
    d["progress"] = max(0, min(d.get("progress", 0) + 1, TOTAL_STEPS))
    set_user_data(cid, d)

def decrement_progress(cid):
    d = get_user_data(cid)
    d["progress"] = max(0, min(d.get("progress", 0) - 1, TOTAL_STEPS))
    set_user_data(cid, d)

def current_progress_text(cid):
    return get_progress_text(get_user_data(cid).get("progress", 0))

async def send_stage_message(u, txt, header="", reply_markup=None):
    await u.effective_message.reply_text(
        (f"<b>{header}</b>\n" if header else "") + txt,
        parse_mode="HTML",
        reply_markup=reply_markup
    )

# ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ
# 3 ‚ñ∏ –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏
# ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ
async def start(u: Update, c: ContextTypes.DEFAULT_TYPE):
    cid = u.effective_chat.id
    set_user_data(cid, {"progress": 0})
    await send_stage_message(
        u,
        "üåü <b>–ê—Å—Å–∏—Å—Ç–µ–Ω—Ç —Å–±–æ—Ä–∫–∏ –ü–ö</b>\n\n–í—ã–±–µ—Ä–∏—Ç–µ —Ä–µ–∂–∏–º:",
        reply_markup=InlineKeyboardMarkup([
            [InlineKeyboardButton("–Ø –≥–æ—Ç–æ–≤", callback_data="ready")],
            [InlineKeyboardButton("üè† –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", callback_data="go_home")],
        ])
    )

async def assistant_pc(u: Update, c: ContextTypes.DEFAULT_TYPE):
    # –≤—ã–∑—ã–≤–∞–µ—Ç—Å—è –∏–∑ main.py
    q = u.callback_query; await q.answer()
    await send_stage_message(
        u,
        "–ü—Ä–æ–≤–µ—Ä—å—Ç–µ –Ω–∞–ª–∏—á–∏–µ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤ –∏ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–æ–≤:\n"
        "- –ú–∞—Ç–µ—Ä–∏–Ω—Å–∫–∞—è –ø–ª–∞—Ç–∞, –ø—Ä–æ—Ü–µ—Å—Å–æ—Ä, –æ—Ö–ª–∞–∂–¥–µ–Ω–∏–µ\n"
        "- –û–ó–£, SSD/M.2/HDD\n"
        "- –ë–ª–æ–∫ –ø–∏—Ç–∞–Ω–∏—è, –∫–æ—Ä–ø—É—Å, –≤–∏–¥–µ–æ–∫–∞—Ä—Ç–∞\n"
        "- –û—Ç–≤—ë—Ä—Ç–∫–∏, –ø–∏–Ω—Ü–µ—Ç, —Å—Ç—è–∂–∫–∏, —Ç–µ—Ä–º–æ–ø–∞—Å—Ç–∞",
        header="–†–µ–∂–∏–º –∞—Å—Å–∏—Å—Ç–µ–Ω—Ç–∞ —Å–±–æ—Ä–∫–∏",
        reply_markup=InlineKeyboardMarkup([
            [InlineKeyboardButton("–Ø –≥–æ—Ç–æ–≤", callback_data="ready")],
            [InlineKeyboardButton("üè† –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", callback_data="go_home")],
        ])
    )

async def handle_preparation_choice(u: Update, c: ContextTypes.DEFAULT_TYPE):
    q = u.callback_query; await q.answer()
    if q.data == "ready":
        await q.edit_message_text(PREPARATION_FULL, parse_mode="HTML")
        increment_progress(q.message.chat_id)
        await send_stage_message(
            u,
            f"{current_progress_text(q.message.chat_id)}\n\n–ù–∞–∂–º–∏—Ç–µ ¬´–î–∞–ª—å—à–µ¬ª.",
            header="üõ†Ô∏è –ü–æ–¥–≥–æ—Ç–æ–≤–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞",
            reply_markup=InlineKeyboardMarkup([
                [
                    InlineKeyboardButton("–ù–∞–∑–∞–¥‚è™", callback_data="back_to_start"),
                    InlineKeyboardButton("–î–∞–ª—å—à–µ‚è©", callback_data="next_step")
                ],
                [InlineKeyboardButton("üè† –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", callback_data="go_home")]
            ])
        )
    else:
        await q.edit_message_text("–ü–æ–¥–≥–æ—Ç–æ–≤—å—Ç–µ—Å—å –∏ –∑–∞–ø—É—Å—Ç–∏—Ç–µ —Å–±–æ—Ä–∫—É –ø–æ–∑–∂–µ.")

async def back_to_start(u: Update, c: ContextTypes.DEFAULT_TYPE):
    decrement_progress(u.effective_chat.id)
    await start(u, c)

async def process_next_step(u: Update, c: ContextTypes.DEFAULT_TYPE):
    q = u.callback_query; await q.answer()
    await send_stage_message(
        u,
        "–í—ã–±–µ—Ä–∏—Ç–µ –ø–ª–∞—Ç—Ñ–æ—Ä–º—É –ø—Ä–æ—Ü–µ—Å—Å–æ—Ä–∞:",
        header="üíª –í—ã–±–æ—Ä –ø–ª–∞—Ç—Ñ–æ—Ä–º—ã",
        reply_markup=InlineKeyboardMarkup([
            [
                InlineKeyboardButton("Intel", callback_data="Intel"),
                InlineKeyboardButton("AMD", callback_data="AMD")
            ],
            [
                InlineKeyboardButton("–ù–∞–∑–∞–¥‚è™", callback_data="back_to_start"),
                InlineKeyboardButton("üè† –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", callback_data="go_home")
            ]
        ])
    )

async def back_to_preparation(u: Update, c: ContextTypes.DEFAULT_TYPE):
    decrement_progress(u.effective_chat.id)
    await assistant_pc(u, c)

async def process_platform_choice(u: Update, c: ContextTypes.DEFAULT_TYPE):
    q = u.callback_query; await q.answer()
    d = get_user_data(q.message.chat_id)
    d.update(platform=q.data, step_index=0)
    set_user_data(q.message.chat_id, d)
    await show_step(u, c)

async def show_step(u: Update, c: ContextTypes.DEFAULT_TYPE):
    q = u.callback_query; d = get_user_data(q.message.chat_id)
    lst = steps[d["platform"]]["instructions"]
    idx = d["step_index"]
    if idx < len(lst):
        await send_stage_message(u, lst[idx], header="‚öôÔ∏è –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –ø—Ä–æ—Ü–µ—Å—Å–æ—Ä–∞")
        d["step_index"] += 1; set_user_data(q.message.chat_id, d)
        increment_progress(q.message.chat_id)
        await send_stage_message(
            u,
            f"{current_progress_text(q.message.chat_id)}\n\n–ù–∞–∂–º–∏—Ç–µ ¬´–î–∞–ª—å—à–µ¬ª.",
            header="‚öôÔ∏è –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –ø—Ä–æ—Ü–µ—Å—Å–æ—Ä–∞",
            reply_markup=InlineKeyboardMarkup([
                [
                    InlineKeyboardButton("–ù–∞–∑–∞–¥‚è™", callback_data="back_to_platform"),
                    InlineKeyboardButton("–î–∞–ª—å—à–µ‚è©", callback_data="next_step_cooling")
                ],
                [InlineKeyboardButton("üè† –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", callback_data="go_home")]
            ])
        )

async def back_to_platform(u: Update, c: ContextTypes.DEFAULT_TYPE):
    decrement_progress(u.effective_chat.id)
    await process_next_step(u, c)

async def handle_cooling_choice(u: Update, c: ContextTypes.DEFAULT_TYPE):
    q = u.callback_query; await q.answer()
    await send_stage_message(
        u,
        "–¢–∏–ø –æ—Ö–ª–∞–∂–¥–µ–Ω–∏—è:",
        header="‚ùÑÔ∏è –°–∏—Å—Ç–µ–º–∞ –æ—Ö–ª–∞–∂–¥–µ–Ω–∏—è",
        reply_markup=InlineKeyboardMarkup([
            [
                InlineKeyboardButton("–í–æ–∑–¥—É—à–Ω–æ–µ", callback_data="air"),
                InlineKeyboardButton("–ñ–∏–¥–∫–æ—Å—Ç–Ω–æ–µ", callback_data="water")
            ],
            [
                InlineKeyboardButton("–ù–∞–∑–∞–¥‚è™", callback_data="back_to_platform"),
                InlineKeyboardButton("üè† –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", callback_data="go_home")
            ]
        ])
    )

async def handle_cooling_selection(u: Update, c: ContextTypes.DEFAULT_TYPE):
    q = u.callback_query; await q.answer()
    info = get_user_data(q.message.chat_id)
    await send_stage_message(u, cooling_instructions[info["platform"]][q.data], header="‚ùÑÔ∏è –°–∏—Å—Ç–µ–º–∞ –æ—Ö–ª–∞–∂–¥–µ–Ω–∏—è")
    increment_progress(q.message.chat_id)
    await send_stage_message(
        u,
        f"{current_progress_text(q.message.chat_id)}\n\n–ù–∞–∂–º–∏—Ç–µ ¬´–î–∞–ª—å—à–µ¬ª.",
        header="‚ùÑÔ∏è –°–∏—Å—Ç–µ–º–∞ –æ—Ö–ª–∞–∂–¥–µ–Ω–∏—è",
        reply_markup=InlineKeyboardMarkup([
            [
                InlineKeyboardButton("–ù–∞–∑–∞–¥‚è™", callback_data="back_to_cooling"),
                InlineKeyboardButton("–î–∞–ª—å—à–µ‚è©", callback_data="next_step_ram")
            ],
            [InlineKeyboardButton("üè† –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", callback_data="go_home")]
        ])
    )

async def back_to_cooling(u: Update, c: ContextTypes.DEFAULT_TYPE):
    decrement_progress(u.effective_chat.id)
    await handle_cooling_choice(u, c)

async def handle_ram_choice(u: Update, c: ContextTypes.DEFAULT_TYPE):
    q = u.callback_query; await q.answer()
    await send_stage_message(
        u,
        "–°–∫–æ–ª—å–∫–æ –ø–ª–∞–Ω–æ–∫ –û–ó–£ —É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç–µ?",
        header="üíæ –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –û–ó–£",
        reply_markup=InlineKeyboardMarkup([
            [
                InlineKeyboardButton("1", callback_data="1"),
                InlineKeyboardButton("2", callback_data="2"),
                InlineKeyboardButton("4", callback_data="4")
            ],
            [
                InlineKeyboardButton("–ù–∞–∑–∞–¥‚è™", callback_data="back_to_cooling"),
                InlineKeyboardButton("üè† –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", callback_data="go_home")
            ]
        ])
    )

async def handle_ram_choice_selection(u: Update, c: ContextTypes.DEFAULT_TYPE):
    q = u.callback_query; await q.answer()
    await q.edit_message_text(ram_instructions[q.data], parse_mode="HTML")
    increment_progress(q.message.chat_id)
    await send_stage_message(
        u,
        f"{current_progress_text(q.message.chat_id)}\n\n–ù–∞–∂–º–∏—Ç–µ ¬´–î–∞–ª—å—à–µ¬ª.",
        header="üíæ –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –û–ó–£",
        reply_markup=InlineKeyboardMarkup([
            [
                InlineKeyboardButton("–ù–∞–∑–∞–¥‚è™", callback_data="back_to_ram"),
                InlineKeyboardButton("–î–∞–ª—å—à–µ‚è©", callback_data="next_step_m2")
            ],
            [InlineKeyboardButton("üè† –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", callback_data="go_home")]
        ])
    )

async def back_to_ram(u: Update, c: ContextTypes.DEFAULT_TYPE):
    decrement_progress(u.effective_chat.id)
    await handle_ram_choice(u, c)

async def handle_m2_choice(u: Update, c: ContextTypes.DEFAULT_TYPE):
    q = u.callback_query; await q.answer()
    await send_stage_message(u, M2_DETAILED, header="üóúÔ∏è M.2 SSD")
    increment_progress(q.message.chat_id)
    await send_stage_message(
        u,
        f"{current_progress_text(q.message.chat_id)}\n\n–ù–∞–∂–º–∏—Ç–µ ¬´–î–∞–ª—å—à–µ¬ª.",
        header="üóúÔ∏è M.2 SSD",
        reply_markup=InlineKeyboardMarkup([
            [
                InlineKeyboardButton("–ù–∞–∑–∞–¥‚è™", callback_data="back_to_ram"),
                InlineKeyboardButton("–î–∞–ª—å—à–µ‚è©", callback_data="next_step_fans")
            ],
            [InlineKeyboardButton("üè† –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", callback_data="go_home")]
        ])
    )

async def back_to_m2(u: Update, c: ContextTypes.DEFAULT_TYPE):
    decrement_progress(u.effective_chat.id)
    await handle_m2_choice(u, c)

async def handle_fan_choice(u: Update, c: ContextTypes.DEFAULT_TYPE):
    q = u.callback_query; await q.answer()
    await send_stage_message(
        u,
        "–¢–∏–ø –∫–æ—Ä–ø—É—Å–∞:",
        header="üåÄ –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –≤–µ–Ω—Ç–∏–ª—è—Ç–æ—Ä–æ–≤",
        reply_markup=InlineKeyboardMarkup([
            [InlineKeyboardButton("–ê–∫–≤–∞—Ä–∏—É–º–Ω—ã–π", callback_data="aquarium")],
            [InlineKeyboardButton("–ö–ª–∞—Å—Å–∏—á–µ—Å–∫–∏–π (–ë–ü –≤–Ω–∏–∑—É)", callback_data="classic_bottom")],
            [InlineKeyboardButton("–ö–ª–∞—Å—Å–∏—á–µ—Å–∫–∏–π (–ë–ü —Å–≤–µ—Ä—Ö—É)", callback_data="classic_top")],
            [InlineKeyboardButton("–£–∂–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã", callback_data="already_installed")],
            [
                InlineKeyboardButton("–ù–∞–∑–∞–¥‚è™", callback_data="back_to_m2"),
                InlineKeyboardButton("üè† –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", callback_data="go_home")
            ]
        ])
    )

async def handle_fan_instructions(u: Update, c: ContextTypes.DEFAULT_TYPE):
    q = u.callback_query; await q.answer()
    await q.edit_message_text(fan_instructions[q.data], parse_mode="HTML")
    increment_progress(q.message.chat_id)
    await send_stage_message(
        u,
        f"{current_progress_text(q.message.chat_id)}\n\n–ù–∞–∂–º–∏—Ç–µ ¬´–î–∞–ª—å—à–µ¬ª.",
        header="üåÄ –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –≤–µ–Ω—Ç–∏–ª—è—Ç–æ—Ä–æ–≤",
        reply_markup=InlineKeyboardMarkup([
            [
                InlineKeyboardButton("–ù–∞–∑–∞–¥‚è™", callback_data="back_to_fans"),
                InlineKeyboardButton("–î–∞–ª—å—à–µ‚è©", callback_data="next_step_power_supply")
            ],
            [InlineKeyboardButton("üè† –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", callback_data="go_home")]
        ])
    )

async def back_to_fans(u: Update, c: ContextTypes.DEFAULT_TYPE):
    decrement_progress(u.effective_chat.id)
    await handle_fan_choice(u, c)

async def handle_power_supply_choice(u: Update, c: ContextTypes.DEFAULT_TYPE):
    q = u.callback_query; await q.answer()
    await send_stage_message(u, power_supply_instructions, header="üîå –ë–ª–æ–∫ –ø–∏—Ç–∞–Ω–∏—è")
    increment_progress(q.message.chat_id)
    await send_stage_message(
        u,
        f"{current_progress_text(q.message.chat_id)}\n\n–ù–∞–∂–º–∏—Ç–µ ¬´–î–∞–ª—å—à–µ¬ª.",
        header="üîå –ë–ª–æ–∫ –ø–∏—Ç–∞–Ω–∏—è",
        reply_markup=InlineKeyboardMarkup([
            [
                InlineKeyboardButton("–ù–∞–∑–∞–¥‚è™", callback_data="back_to_fans"),
                InlineKeyboardButton("–î–∞–ª—å—à–µ‚è©", callback_data="next_step_gpu_check")
            ],
            [InlineKeyboardButton("üè† –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", callback_data="go_home")]
        ])
    )

async def back_to_power(u: Update, c: ContextTypes.DEFAULT_TYPE):
    decrement_progress(u.effective_chat.id)
    await handle_power_supply_choice(u, c)

async def ask_gpu_presence(u: Update, c: ContextTypes.DEFAULT_TYPE):
    q = u.callback_query; await q.answer()
    await send_stage_message(
        u,
        "–ï—Å—Ç—å –¥–∏—Å–∫—Ä–µ—Ç–Ω–∞—è –≤–∏–¥–µ–æ–∫–∞—Ä—Ç–∞?",
        header="üéÆ –í–∏–¥–µ–æ–∫–∞—Ä—Ç–∞",
        reply_markup=InlineKeyboardMarkup([
            [
                InlineKeyboardButton("–î–∞", callback_data="gpu_yes"),
                InlineKeyboardButton("–ù–µ—Ç", callback_data="gpu_no")
            ],
            [
                InlineKeyboardButton("–ù–∞–∑–∞–¥‚è™", callback_data="back_to_power"),
                InlineKeyboardButton("üè† –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", callback_data="go_home")
            ]
        ])
    )

async def handle_gpu_yes(u: Update, c: ContextTypes.DEFAULT_TYPE):
    q = u.callback_query; await q.answer()
    await send_stage_message(u, gpu_instructions, header="üéÆ –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –≤–∏–¥–µ–æ–∫–∞—Ä—Ç—ã")
    increment_progress(q.message.chat_id)
    await send_stage_message(
        u,
        f"{current_progress_text(q.message.chat_id)}\n\n–ù–∞–∂–º–∏—Ç–µ ¬´–î–∞–ª—å—à–µ¬ª.",
        header="üéÆ –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –≤–∏–¥–µ–æ–∫–∞—Ä—Ç—ã",
        reply_markup=InlineKeyboardMarkup([
            [
                InlineKeyboardButton("–ù–∞–∑–∞–¥‚è™", callback_data="back_to_gpu"),
                InlineKeyboardButton("–î–∞–ª—å—à–µ‚è©", callback_data="next_step_wires")
            ],
            [InlineKeyboardButton("üè† –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", callback_data="go_home")]
        ])
    )

async def handle_gpu_no(u: Update, c: ContextTypes.DEFAULT_TYPE):
    q = u.callback_query; await q.answer()
    increment_progress(q.message.chat_id)
    await send_stage_message(
        u,
        f"{current_progress_text(q.message.chat_id)}\n\n–ù–∞–∂–º–∏—Ç–µ ¬´–î–∞–ª—å—à–µ¬ª.",
        header="üéÆ –í–∏–¥–µ–æ–∫–∞—Ä—Ç–∞",
        reply_markup=InlineKeyboardMarkup([
            [
                InlineKeyboardButton("–ù–∞–∑–∞–¥‚è™", callback_data="back_to_gpu"),
                InlineKeyboardButton("–î–∞–ª—å—à–µ‚è©", callback_data="next_step_wires")
            ],
            [InlineKeyboardButton("üè† –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", callback_data="go_home")]
        ])
    )

async def back_to_gpu(u: Update, c: ContextTypes.DEFAULT_TYPE):
    decrement_progress(u.effective_chat.id)
    await ask_gpu_presence(u, c)

async def handle_wires_instruction(u: Update, c: ContextTypes.DEFAULT_TYPE):
    q = u.callback_query; await q.answer()
    await send_stage_message(u, wires_instructions, header="üîó –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫–∞–±–µ–ª–µ–π")
    img = Path(__file__).with_name("IMG_5330.jpg")
    if img.exists():
        with open(img, "rb") as ph:
            await c.bot.send_photo(q.message.chat_id, ph, caption="–°—Ö–µ–º–∞ PANEL1")
    increment_progress(q.message.chat_id)
    await send_stage_message(
        u,
        f"{current_progress_text(q.message.chat_id)}\n\n–ù–∞–∂–º–∏—Ç–µ ¬´–î–∞–ª—å—à–µ¬ª –¥–ª—è —É—Å—Ç–∞–Ω–æ–≤–∫–∏ –û–°.",
        header="üîó –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫–∞–±–µ–ª–µ–π",
        reply_markup=InlineKeyboardMarkup([
            [
                InlineKeyboardButton("–ù–∞–∑–∞–¥‚è™", callback_data="back_to_wires"),
                InlineKeyboardButton("–î–∞–ª—å—à–µ‚è©", callback_data="next_step_os")
            ],
            [InlineKeyboardButton("üè† –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", callback_data="go_home")]
        ])
    )

async def back_to_wires(u: Update, c: ContextTypes.DEFAULT_TYPE):
    decrement_progress(u.effective_chat.id)
    await handle_wires_instruction(u, c)

async def ask_os_question(u: Update, c: ContextTypes.DEFAULT_TYPE):
    q = u.callback_query; await q.answer()
    await send_stage_message(
        u,
        "–ù—É–∂–Ω–∞ –ø–æ–º–æ—â—å —Å —É—Å—Ç–∞–Ω–æ–≤–∫–æ–π –û–°?",
        header="üíø –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –û–°",
        reply_markup=InlineKeyboardMarkup([
            [
                InlineKeyboardButton("–î–∞", callback_data="os_yes"),
                InlineKeyboardButton("–ù–µ—Ç", callback_data="os_no")
            ],
            [InlineKeyboardButton("üè† –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", callback_data="go_home")]
        ])
    )

async def handle_os_help_yes(u: Update, c: ContextTypes.DEFAULT_TYPE):
    q = u.callback_query; await q.answer()
    await send_stage_message(
        u,
        "–í—ã–±–µ—Ä–∏—Ç–µ –û–°:",
        header="üíø –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –û–°",
        reply_markup=InlineKeyboardMarkup([
            [
                InlineKeyboardButton("Windows", callback_data="os_windows"),
                InlineKeyboardButton("Linux", callback_data="os_linux"),
                InlineKeyboardButton("macOS", callback_data="os_mac")
            ],
            [InlineKeyboardButton("üè† –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", callback_data="go_home")]
        ])
    )

async def handle_os_help_no(u: Update, c: ContextTypes.DEFAULT_TYPE):
    q = u.callback_query; await q.answer()
    await send_stage_message(
        u,
        "–ü–µ—Ä–µ—Ö–æ–¥–∏–º –∫ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—é —Å–±–æ—Ä–∫–∏.",
        header="üíø –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –û–°",
        reply_markup=InlineKeyboardMarkup([
            [
                InlineKeyboardButton("–ù–∞–∑–∞–¥‚è™", callback_data="back_to_wires"),
                InlineKeyboardButton("–ó–∞–≤–µ—Ä—à–∏—Ç—å", callback_data="finish_assembly")
            ],
            [InlineKeyboardButton("üè† –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", callback_data="go_home")]
        ])
    )

async def handle_os_windows(u: Update, c: ContextTypes.DEFAULT_TYPE):
    q = u.callback_query; await q.answer()
    await send_stage_message(u, WIN_TEXT, header="üñ•Ô∏è –£—Å—Ç–∞–Ω–æ–≤–∫–∞ Windows")
    await send_stage_message(
        u,
        "–ù–∞–∂–º–∏—Ç–µ ¬´–ó–∞–≤–µ—Ä—à–∏—Ç—å¬ª, —á—Ç–æ–±—ã –∑–∞–∫–æ–Ω—á–∏—Ç—å.",
        reply_markup=InlineKeyboardMarkup([
            [
                InlineKeyboardButton("–ù–∞–∑–∞–¥‚è™", callback_data="os_yes"),
                InlineKeyboardButton("–ó–∞–≤–µ—Ä—à–∏—Ç—å", callback_data="finish_assembly")
            ],
            [InlineKeyboardButton("üè† –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", callback_data="go_home")]
        ])
    )

async def handle_os_linux(u: Update, c: ContextTypes.DEFAULT_TYPE):
    q = u.callback_query; await q.answer()
    await send_stage_message(u, LINUX_TEXT, header="üêß –£—Å—Ç–∞–Ω–æ–≤–∫–∞ Ubuntu")
    await send_stage_message(
        u,
        "–ù–∞–∂–º–∏—Ç–µ ¬´–ó–∞–≤–µ—Ä—à–∏—Ç—å¬ª, —á—Ç–æ–±—ã –∑–∞–∫–æ–Ω—á–∏—Ç—å.",
        reply_markup=InlineKeyboardMarkup([
            [
                InlineKeyboardButton("–ù–∞–∑–∞–¥‚è™", callback_data="os_yes"),
                InlineKeyboardButton("–ó–∞–≤–µ—Ä—à–∏—Ç—å", callback_data="finish_assembly")
            ],
            [InlineKeyboardButton("üè† –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", callback_data="go_home")]
        ])
    )

async def handle_os_mac(u: Update, c: ContextTypes.DEFAULT_TYPE):
    q = u.callback_query; await q.answer()
    await send_stage_message(u, MAC_TEXT, header="üçé –£—Å—Ç–∞–Ω–æ–≤–∫–∞ macOS")
    await send_stage_message(
        u,
        "–ù–∞–∂–º–∏—Ç–µ ¬´–ó–∞–≤–µ—Ä—à–∏—Ç—å¬ª, —á—Ç–æ–±—ã –∑–∞–∫–æ–Ω—á–∏—Ç—å.",
        reply_markup=InlineKeyboardMarkup([
            [
                InlineKeyboardButton("–ù–∞–∑–∞–¥‚è™", callback_data="os_yes"),
                InlineKeyboardButton("–ó–∞–≤–µ—Ä—à–∏—Ç—å", callback_data="finish_assembly")
            ],
            [InlineKeyboardButton("üè† –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", callback_data="go_home")]
        ])
    )

async def finish_assembly(u: Update, c: ContextTypes.DEFAULT_TYPE):
    q = u.callback_query; await q.answer()
    await send_stage_message(
        u,
        "üéâ <b>–°–±–æ—Ä–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞!</b> –ü—Ä–∏—è—Ç–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –Ω–æ–≤—ã–º –ü–ö!",
        header="üéâ –ì–æ—Ç–æ–≤–æ",
        reply_markup=InlineKeyboardMarkup([
            [InlineKeyboardButton("üè† –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", callback_data="go_home")]
        ])
    )

async def go_home(u: Update, c: ContextTypes.DEFAULT_TYPE):
    q = u.callback_query
    if q:
        await q.answer()
    from main import start_main_menu
    await start_main_menu(u, c)

# ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ
# 4 ‚ñ∏ –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤
# ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ
def setup_handlers(app):
    # –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –Ω–∞–≤–∏–≥–∞—Ü–∏–∏ –≤–Ω—É—Ç—Ä–∏ –∞—Å—Å–∏—Å—Ç–µ–Ω—Ç–∞
    app.add_handler(CallbackQueryHandler(handle_preparation_choice, pattern="^(ready|not_ready)$"))
    app.add_handler(CallbackQueryHandler(back_to_start,             pattern="^back_to_start$"))
    app.add_handler(CallbackQueryHandler(process_next_step,         pattern="^next_step$"))
    app.add_handler(CallbackQueryHandler(back_to_preparation,       pattern="^back_to_preparation$"))
    app.add_handler(CallbackQueryHandler(process_platform_choice,   pattern="^(Intel|AMD)$"))
    app.add_handler(CallbackQueryHandler(back_to_platform,          pattern="^back_to_platform$"))
    app.add_handler(CallbackQueryHandler(handle_cooling_choice,     pattern="^next_step_cooling$"))
    app.add_handler(CallbackQueryHandler(handle_cooling_selection,  pattern="^(air|water)$"))
    app.add_handler(CallbackQueryHandler(back_to_cooling,           pattern="^back_to_cooling$"))
    app.add_handler(CallbackQueryHandler(handle_ram_choice,         pattern="^next_step_ram$"))
    app.add_handler(CallbackQueryHandler(handle_ram_choice_selection, pattern="^(1|2|4)$"))
    app.add_handler(CallbackQueryHandler(back_to_ram,               pattern="^back_to_ram$"))
    app.add_handler(CallbackQueryHandler(handle_m2_choice,          pattern="^next_step_m2$"))
    app.add_handler(CallbackQueryHandler(back_to_m2,                pattern="^back_to_m2$"))
    app.add_handler(CallbackQueryHandler(handle_fan_choice,         pattern="^next_step_fans$"))
    app.add_handler(CallbackQueryHandler(handle_fan_instructions,   pattern="^(aquarium|classic_bottom|classic_top|already_installed)$"))
    app.add_handler(CallbackQueryHandler(back_to_fans,              pattern="^back_to_fans$"))
    app.add_handler(CallbackQueryHandler(handle_power_supply_choice,pattern="^next_step_power_supply$"))
    app.add_handler(CallbackQueryHandler(back_to_power,             pattern="^back_to_power$"))
    app.add_handler(CallbackQueryHandler(ask_gpu_presence,          pattern="^next_step_gpu_check$"))
    app.add_handler(CallbackQueryHandler(handle_gpu_yes,            pattern="^gpu_yes$"))
    app.add_handler(CallbackQueryHandler(handle_gpu_no,             pattern="^gpu_no$"))
    app.add_handler(CallbackQueryHandler(back_to_gpu,               pattern="^back_to_gpu$"))
    app.add_handler(CallbackQueryHandler(handle_wires_instruction,  pattern="^next_step_wires$"))
    app.add_handler(CallbackQueryHandler(back_to_wires,             pattern="^back_to_wires$"))
    app.add_handler(CallbackQueryHandler(ask_os_question,           pattern="^next_step_os$"))
    app.add_handler(CallbackQueryHandler(handle_os_help_yes,        pattern="^os_yes$"))
    app.add_handler(CallbackQueryHandler(handle_os_help_no,         pattern="^os_no$"))
    app.add_handler(CallbackQueryHandler(handle_os_windows,         pattern="^os_windows$"))
    app.add_handler(CallbackQueryHandler(handle_os_linux,           pattern="^os_linux$"))
    app.add_handler(CallbackQueryHandler(handle_os_mac,             pattern="^os_mac$"))
    app.add_handler(CallbackQueryHandler(finish_assembly,           pattern="^finish_assembly$"))
    app.add_handler(CallbackQueryHandler(go_home,                   pattern="^go_home$"))